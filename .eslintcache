[{"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\index.js":"1","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\reportWebVitals.js":"2","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\App.js":"3","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\services\\firebase.js":"4","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addComponentPage.jsx":"5","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageBOM.jsx":"6","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\mainDesign.jsx":"7","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageCMT.jsx":"8","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\navBar.jsx":"9","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\fabricCanvas.jsx":"10","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\toolBar.jsx":"11","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminGetItemType.jsx":"12","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\componentDropdown.jsx":"13","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\editingCanvas.jsx":"14","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\eyeDropTool.jsx":"15","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\patternDropdown.jsx":"16","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\silhouettesDropdown.jsx":"17"},{"size":639,"mtime":1612030829082,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1612030829083,"results":"20","hashOfConfig":"19"},{"size":11126,"mtime":1612030829077,"results":"21","hashOfConfig":"19"},{"size":575,"mtime":1612363589221,"results":"22","hashOfConfig":"19"},{"size":5779,"mtime":1612030829078,"results":"23","hashOfConfig":"19"},{"size":6079,"mtime":1612367180443,"results":"24","hashOfConfig":"19"},{"size":6158,"mtime":1612030829080,"results":"25","hashOfConfig":"19"},{"size":5709,"mtime":1612367398072,"results":"26","hashOfConfig":"19"},{"size":1307,"mtime":1612030829081,"results":"27","hashOfConfig":"19"},{"size":3953,"mtime":1612030829080,"results":"28","hashOfConfig":"19"},{"size":1516,"mtime":1612030829081,"results":"29","hashOfConfig":"19"},{"size":869,"mtime":1612083748114,"results":"30","hashOfConfig":"19"},{"size":1141,"mtime":1612030829079,"results":"31","hashOfConfig":"19"},{"size":4684,"mtime":1612030829080,"results":"32","hashOfConfig":"19"},{"size":1423,"mtime":1612030829080,"results":"33","hashOfConfig":"19"},{"size":1051,"mtime":1612030829081,"results":"34","hashOfConfig":"19"},{"size":1074,"mtime":1612030829081,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"a6lu8p",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"39"},"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\index.js",["84","85"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"fabric\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["86","87"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\reportWebVitals.js",[],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\App.js",["88","89","90","91","92","93"],"import React, { Component, createRef } from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport AddComponentPage from \"./components/addComponentPage\";\r\nimport AdminPageBOM from \"./components/adminPageBOM\";\r\nimport AdminPageCMT from \"./components/adminPageCMT\";\r\nimport MainDesign from \"./components/mainDesign\";\r\nimport { db, auth } from \"./services/firebase\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    uploadedComponentFiles: [],\r\n    uploadedPatternFiles: [],\r\n    importedComponentFiles: [],\r\n    uploadedSilhouetteMainFiles: null, //only locally used\r\n    uploadedSilhouetteMaskFiles: null, //only locally used\r\n    combinedSilhouettesArray: [],\r\n    currentPatternComp: \"abc\",\r\n    patternRenderSwitch: false,\r\n    componentRenderSwitch: false,\r\n    silhouetteRenderSwitch: false,\r\n    deleteActiveObject: false,\r\n    editingModeOn: false,\r\n    currentComp: null,\r\n    currentSilhouette: null,\r\n    bgColor: \"#ffffff\",\r\n    buttonProcessing: [0, \"outline-warning\", \"Process\"],\r\n    compDict: {},\r\n    BOM: [],\r\n    propertyBOM: [],\r\n  }; //importedComponentFiles for firestore database\r\n\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.hiddenInputRef = React.createRef(null);\r\n  //   this.setState({ hiddenRef: this.hiddenInputRef });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.keyFunction, false);\r\n    document.addEventListener(\"click\", this.mouseFunction, false);\r\n    db.collection(\"components\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtImpCompArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtImpCompArray.push(data);\r\n        });\r\n        // console.log(pvtImpCompArray);\r\n        // console.log(pvtImpCompArray[0].config[0].name);\r\n        this.setState({\r\n          importedComponentFiles: pvtImpCompArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    db.collection(\"BOM\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtpropertyBOMArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtpropertyBOMArray.push(data);\r\n        });\r\n        this.setState({ propertyBOM: pvtpropertyBOMArray });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.keyFunction, false);\r\n    document.removeEventListener(\"click\", this.mouseFunction, false);\r\n  }\r\n\r\n  // mouseFunction = (event) => {};\r\n\r\n  keyFunction = (event) => {\r\n    if (event.keyCode === 46) {\r\n      this.setState({\r\n        deleteActiveObject: true,\r\n        patternRenderSwitch: false,\r\n        componentRenderSwitch: false,\r\n        silhouetteRenderSwitch: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleUploadedComponentFiles = (event) => {\r\n    this.setState({\r\n      uploadedComponentFiles: [\r\n        ...this.state.uploadedComponentFiles,\r\n        ...event.target.files,\r\n      ],\r\n      patternRenderSwitch: false,\r\n      componentRenderSwitch: false,\r\n      silhouetteRenderSwitch: false,\r\n    });\r\n  };\r\n\r\n  handleUploadedPatternFiles = (event) => {\r\n    this.setState({\r\n      uploadedPatternFiles: [\r\n        ...this.state.uploadedPatternFiles,\r\n        ...event.target.files,\r\n      ],\r\n    });\r\n  };\r\n\r\n  drawComponent = (componentComp, componentName, componentConfig) => {\r\n    this.setState({\r\n      currentComp: componentComp,\r\n      componentRenderSwitch: true,\r\n      silhouetteRenderSwitch: false,\r\n      patternRenderSwitch: false,\r\n    });\r\n\r\n    //just to test\r\n    // db.collection(\"BOM\").doc(\"8NWgDJR8D48nVXwcNHRs\").delete();\r\n\r\n    let propertyBOM = this.state.propertyBOM;\r\n    //adding to local BOM\r\n    componentConfig.forEach((element) => {\r\n      let unit = \"none\";\r\n      let rate = -1;\r\n      let id = -1;\r\n\r\n      propertyBOM.forEach((BOMElement) => {\r\n        if (element.type == BOMElement.type) {\r\n          unit = BOMElement.unit;\r\n          rate = BOMElement.rate;\r\n          id = BOMElement.id;\r\n        }\r\n      });\r\n\r\n      let addNew = true;\r\n      let BOM = this.state.BOM;\r\n      BOM.forEach((BOMElement) => {\r\n        if (element.name == BOMElement.name) {\r\n          BOMElement.consumption =\r\n            parseFloat(BOMElement.consumption) +\r\n            parseFloat(element.consumption);\r\n          addNew = false;\r\n        }\r\n      });\r\n      this.setState({ BOM });\r\n\r\n      if (addNew) {\r\n        let selectedItemBOM = {\r\n          name: element.name,\r\n          type: element.type,\r\n          id: id,\r\n          unit: unit,\r\n          consumption: parseFloat(element.consumption),\r\n          rate: parseFloat(rate),\r\n        };\r\n\r\n        BOM.push(selectedItemBOM);\r\n        this.setState({ BOM });\r\n      }\r\n    });\r\n    console.log(this.state.BOM);\r\n  };\r\n\r\n  drawSilhouettes = (silht) => {\r\n    this.setState({\r\n      currentSilhouette: silht,\r\n      silhouetteRenderSwitch: true,\r\n      componentRenderSwitch: false,\r\n      patternRenderSwitch: false,\r\n    });\r\n  };\r\n\r\n  drawPattern = (patternComp) => {\r\n    this.setState({\r\n      currentPatternComp: patternComp,\r\n      patternRenderSwitch: true,\r\n      silhouetteRenderSwitch: false,\r\n      componentRenderSwitch: false,\r\n    });\r\n  };\r\n\r\n  handleUploadedSilhouetteMainFiles = (event) => {\r\n    this.setState({ uploadedSilhouetteMainFiles: event.target.files[0] });\r\n  };\r\n\r\n  handleUploadedSilhouetteMaskFiles = (event) => {\r\n    this.setState({ uploadedSilhouetteMaskFiles: event.target.files[0] });\r\n  };\r\n\r\n  handleColorUpload = () => {\r\n    var hiddenColorCanvas = document.createElement(\"canvas\");\r\n    hiddenColorCanvas.width = 550;\r\n    hiddenColorCanvas.height = 500;\r\n\r\n    var ctx = hiddenColorCanvas.getContext(\"2d\");\r\n    ctx.fillStyle = this.state.bgColor;\r\n    ctx.fillRect(0, 0, 500, 500);\r\n\r\n    let colorSrc = hiddenColorCanvas.toDataURL();\r\n    this.drawPattern(colorSrc);\r\n  };\r\n\r\n  handleColorChangeComplete = (color) => {\r\n    this.setState({ bgColor: color.hex });\r\n  };\r\n\r\n  handleSilhouettesCombine = () => {\r\n    if (this.state.buttonProcessing[0] === 0) {\r\n      let imageFileMain = this.state.uploadedSilhouetteMainFiles;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(imageFileMain);\r\n      reader.onloadend = function (e) {\r\n        imageFileMain.comp = e.target.result;\r\n        this.setState({ uploadedSilhouetteMainFiles: imageFileMain });\r\n      }.bind(this);\r\n\r\n      let imageFileMask = this.state.uploadedSilhouetteMaskFiles;\r\n      var reader2 = new FileReader();\r\n      reader2.readAsDataURL(imageFileMask);\r\n      reader2.onloadend = function (e) {\r\n        imageFileMask.comp = e.target.result;\r\n        this.setState({ uploadedSilhouetteMaskFiles: imageFileMask });\r\n      }.bind(this);\r\n      this.setState({ buttonProcessing: [1, \"outline-success\", \"Done\"] });\r\n    } else if (this.state.buttonProcessing[0] === 1) {\r\n      let newLocalArrayofSilhouettes = [\r\n        this.state.uploadedSilhouetteMainFiles,\r\n        this.state.uploadedSilhouetteMaskFiles,\r\n      ];\r\n      let arr = this.state.combinedSilhouettesArray;\r\n      arr.push(newLocalArrayofSilhouettes);\r\n      this.setState({\r\n        combinedSilhouettesArray: arr,\r\n        buttonProcessing: [2, \"outline-success\", \"Done\"],\r\n      });\r\n    } else if (this.state.buttonProcessing[0] === 2) {\r\n      this.setState({\r\n        buttonProcessing: [-1, \"outline-danger\", \"You can close now\"],\r\n      });\r\n    }\r\n  };\r\n\r\n  componentFilesUploadData = () => {\r\n    let localComponentFiles = this.state.uploadedComponentFiles;\r\n    let compArray = Array.from(localComponentFiles);\r\n\r\n    compArray.forEach(function (item, index) {\r\n      let imageFile = item;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(imageFile);\r\n      reader.onloadend = function (e) {\r\n        var myImage = new Image();\r\n        myImage.src = e.target.result;\r\n        item.comp = e.target.result;\r\n        // console.log(e.target.result);\r\n        db.collection(\"components\").add({\r\n          comp: e.target.result,\r\n          cost: 40,\r\n          name: item.name,\r\n        });\r\n      };\r\n    });\r\n  };\r\n\r\n  patternFilesUploadData = () => {\r\n    let localPatternFiles = this.state.uploadedPatternFiles;\r\n    let compArray = Array.from(localPatternFiles);\r\n\r\n    compArray.forEach(function (item, index) {\r\n      let imageFile = item;\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(imageFile);\r\n      reader.onloadend = function (e) {\r\n        var myImage = new Image();\r\n        myImage.src = e.target.result;\r\n        item.comp = e.target.result;\r\n        // console.log(e.target.result);\r\n        db.collection(\"patterns\").add({\r\n          comp: e.target.result,\r\n          cost: 40,\r\n          name: item.name,\r\n        });\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <MainDesign\r\n            onHandleUploadedComponentFiles={this.handleUploadedComponentFiles}\r\n            onHandleUploadedPatternFiles={this.handleUploadedPatternFiles}\r\n            onHandleUploadedSilhouetteMainFiles={\r\n              this.handleUploadedSilhouetteMainFiles\r\n            }\r\n            onHandleUploadedSilhouetteMaskFiles={\r\n              this.handleUploadedSilhouetteMaskFiles\r\n            }\r\n            combinedSilhouettesArray={this.state.combinedSilhouettesArray}\r\n            onHandleSilhouettesCombine={this.handleSilhouettesCombine}\r\n            onComponentFilesUploadData={this.componentFilesUploadData}\r\n            onPatternFilesUploadData={this.patternFilesUploadData}\r\n            uploadedComponentFiles={this.state.uploadedComponentFiles}\r\n            uploadedPatternFiles={this.state.uploadedPatternFiles}\r\n            importedComponentFiles={this.state.importedComponentFiles}\r\n            uploadedSilhouetteFiles={this.state.uploadedSilhouetteFiles}\r\n            currentComp={this.state.currentComp}\r\n            componentRenderSwitch={this.state.componentRenderSwitch}\r\n            drawComponent={this.drawComponent}\r\n            drawSilhouettes={this.drawSilhouettes}\r\n            drawPattern={this.drawPattern}\r\n            buttonProcessing={this.state.buttonProcessing}\r\n            silhouetteRenderSwitch={this.state.silhouetteRenderSwitch}\r\n            currentSilhouette={this.state.currentSilhouette}\r\n            currentPatternComp={this.state.currentPatternComp}\r\n            patternRenderSwitch={this.state.patternRenderSwitch}\r\n            deleteActiveObject={this.state.deleteActiveObject}\r\n            editingModeOn={this.state.editingModeOn}\r\n            bgColor={this.state.bgColor}\r\n            onHandleColorChangeComplete={this.handleColorChangeComplete}\r\n            onHandleColorUpload={this.handleColorUpload}\r\n            compDict={this.state.compDict}\r\n          ></MainDesign>\r\n        </Route>\r\n        <Route path=\"/admin-bom\">\r\n          <AdminPageBOM />\r\n        </Route>\r\n        <Route path=\"/admin-cmt\">\r\n          <AdminPageCMT />\r\n        </Route>\r\n        <Route path=\"/add-component\">\r\n          <AddComponentPage />\r\n        </Route>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\services\\firebase.js",[],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addComponentPage.jsx",["94","95","96"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\nimport NavBar from \"./navBar\";\r\nimport { FcPlus } from \"react-icons/fc\";\r\nimport AdminGetItemType from \"./adminGetItemType\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { db, auth } from \"../services/firebase\";\r\n\r\nclass AddComponentPage extends Component {\r\n  state = {\r\n    itemCount: 0,\r\n    itemCountArray: [],\r\n    BOMItemsArray: [],\r\n    itemTypeObject: {},\r\n    imgComp: null,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    db.collection(\"BOM\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtBOMItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtBOMItemsArray.push(data);\r\n        });\r\n        this.setState({\r\n          BOMItemsArray: pvtBOMItemsArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  onItemTypeSelected = (rowId, selectedType) => {\r\n    let itemTypeObject = this.state.itemTypeObject;\r\n    itemTypeObject[rowId] = selectedType;\r\n    this.setState({ itemTypeObject });\r\n  };\r\n\r\n  getComponentImage = (event) => {\r\n    let file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      function () {\r\n        this.setState({ imgComp: reader.result });\r\n      }.bind(this),\r\n      false\r\n    );\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  onUpload = () => {\r\n    let itemCountArray = this.state.itemCountArray;\r\n    let typeObjList = [];\r\n\r\n    itemCountArray.forEach((element) => {\r\n      console.log(element);\r\n      let itemName = document.getElementById(\"name-lbl\" + element).innerHTML;\r\n      let itemType = this.state.itemTypeObject[element];\r\n      let itemConsumption = document.getElementById(\"consumption\" + element)\r\n        .value;\r\n      let typeObj = {\r\n        name: itemName,\r\n        type: itemType,\r\n        consumption: itemConsumption,\r\n      };\r\n      typeObjList.push(typeObj);\r\n    });\r\n\r\n    db.collection(\"components\").add({\r\n      name: document.getElementById(\"compName\").value,\r\n      comp: this.state.imgComp,\r\n      config: typeObjList,\r\n    });\r\n  };\r\n\r\n  onNewItemAdd = () => {\r\n    let itemCount = this.state.itemCount + 1;\r\n    let itemCountArray = this.state.itemCountArray;\r\n    itemCountArray.push(itemCount - 1);\r\n    this.setState({ itemCount, itemCountArray });\r\n  };\r\n\r\n  deleteItem = (index) => {\r\n    let rowToDelete = document.getElementById(\"tr\" + index);\r\n    let itemCountArray = this.state.itemCountArray;\r\n    var i = itemCountArray.indexOf(index);\r\n    if (index !== -1) {\r\n      itemCountArray.splice(i, 1);\r\n    }\r\n    rowToDelete.remove();\r\n    this.setState({ itemCountArray });\r\n    console.log(itemCountArray);\r\n  };\r\n\r\n  RenderItemNameChoice = (index) => {\r\n    let type = this.state.itemTypeObject[index];\r\n    let localRawArray = this.state.BOMItemsArray;\r\n    let nameArray = [];\r\n    localRawArray.forEach((element) => {\r\n      if (element.type === type) {\r\n        nameArray.push(element);\r\n      }\r\n    });\r\n\r\n    const itemClicked = (element) => {\r\n      document.getElementById(\"name-lbl\" + index).innerHTML = element.name;\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <DropdownButton id={\"name\" + index} className=\"ml-2\">\r\n          {nameArray.map((element) => (\r\n            <Dropdown.Item\r\n              onClick={() => itemClicked(element)}\r\n              key={element.id}\r\n            >\r\n              {element.name}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n        <h6 className=\"ml-2 mt-2\" id={\"name-lbl\" + index}>\r\n          ---\r\n        </h6>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  renderNewItemInput = () => {\r\n    return [...Array(this.state.itemCount)].map((e, i) => (\r\n      <tr id={\"tr\" + i} key={i}>\r\n        <td>\r\n          <Row>\r\n            <AdminGetItemType\r\n              rawArray={this.state.BOMItemsArray}\r\n              inRow={i}\r\n              onItemTypeSelected={this.onItemTypeSelected}\r\n            />\r\n            {this.RenderItemNameChoice(i)}\r\n          </Row>\r\n        </td>\r\n        <td>\r\n          <input type=\"text\" id={\"consumption\" + i} />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            id={\"delete\" + i}\r\n            onClick={() => this.deleteItem(i)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Row className=\"m-2\">\r\n          <input type=\"file\" onChange={this.getComponentImage} />\r\n          <input //ADD FUNCTIONALITY TO THIS FEATURE OF COMPONENT ID LATER ON\r\n            className=\"mr-2\" //IMP\r\n            type=\"text\" //IMP\r\n            placeholder=\"ID\" //IMP\r\n            id=\"compId\" //IM[]\r\n            style={{ width: 40 }} //IMP\r\n          />\r\n          <input type=\"text\" placeholder=\"Enter name...\" id=\"compName\" />\r\n        </Row>\r\n        <Row className=\"m-2\">\r\n          <Table>\r\n            <tr>\r\n              <th>\r\n                Item\r\n                <button\r\n                  onClick={() => this.onNewItemAdd()}\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                >\r\n                  <FcPlus />\r\n                </button>\r\n              </th>\r\n              <th>Consumption</th>\r\n            </tr>\r\n            {this.renderNewItemInput()}\r\n          </Table>\r\n          <Button variant=\"success\" onClick={() => this.onUpload()}>\r\n            Upload\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddComponentPage;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageBOM.jsx",["97","98","99","100","101"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\mainDesign.jsx",["102"],"import React, { Component } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Fabric_Canvas_My from \"./fabricCanvas\";\r\nimport NavBar from \"./navBar\";\r\nimport ToolBar from \"./toolBar\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass MainDesign extends Component {\r\n  state = { display: \"yes\" };\r\n\r\n  render() {\r\n    // console.log(this.props.location.pathname);\r\n    // if (this.props.location.pathname === \"/\" && this.state.display !== \"yes\") {\r\n    //   this.setState({ display: \"yes\" });\r\n    // } else if (\r\n    //   this.props.location.pathname === \"/add-component\" &&\r\n    //   this.state.display !== \"none\"\r\n    // ) {\r\n    //   this.setState({ display: \"none\" });\r\n    // }\r\n    return (\r\n      <div style={{ display: this.state.display }}>\r\n        <header>\r\n          <NavBar onCanvasScreen={true}></NavBar>\r\n        </header>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"m-2\" xs={1}>\r\n              <ToolBar\r\n                uploadedComponentFiles={this.props.uploadedComponentFiles}\r\n                uploadedPatternFiles={this.props.uploadedPatternFiles}\r\n                importedComponentFiles={this.props.importedComponentFiles}\r\n                hiddenRef={this.props.hiddenRef}\r\n                drawComponent={this.props.drawComponent}\r\n                combinedSilhouettesArray={this.props.combinedSilhouettesArray}\r\n                drawSilhouettes={this.props.drawSilhouettes}\r\n                drawPattern={this.props.drawPattern}\r\n                onHandleColorChangeComplete={\r\n                  this.props.onHandleColorChangeComplete\r\n                }\r\n                bgColor={this.props.bgColor}\r\n                onHandleColorUpload={this.props.onHandleColorUpload}\r\n              ></ToolBar>\r\n            </Col>\r\n            <Col className=\"ml-3\">\r\n              {/* <Canvas\r\n                currentComp={this.props.currentComp}\r\n                componentRenderSwitch={this.props.componentRenderSwitch}\r\n                currentSilhouette={this.props.currentSilhouette}\r\n                silhouetteRenderSwitch={this.props.silhsouetteRenderSwitch}\r\n              ></Canvas> */}\r\n              <Fabric_Canvas_My\r\n                currentComp={this.props.currentComp}\r\n                componentRenderSwitch={this.props.componentRenderSwitch}\r\n                currentSilhouette={this.props.currentSilhouette}\r\n                silhouetteRenderSwitch={this.props.silhouetteRenderSwitch}\r\n                patternRenderSwitch={this.props.patternRenderSwitch}\r\n                currentPatternComp={this.props.currentPatternComp}\r\n                deleteActiveObject={this.props.deleteActiveObject}\r\n                compDict={this.props.compDict}\r\n              ></Fabric_Canvas_My>\r\n            </Col>\r\n            <Col ml=\"2\">\r\n              <div>\r\n                <label\r\n                  for=\"files\"\r\n                  class=\"btn\"\r\n                  className=\"mt-2\"\r\n                  style={{ color: \"red\" }}\r\n                >\r\n                  Upload custom components below\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.props.onHandleUploadedComponentFiles}\r\n                  multiple=\"multiple\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  bsPrefix=\"super-btn\"\r\n                  variant=\"primary\"\r\n                  onClick={this.props.onComponentFilesUploadData}\r\n                >\r\n                  Upload Components\r\n                </Button>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <label style={{ color: \"red\" }}>Upload silhouettes below</label>\r\n              </div>\r\n              <div>\r\n                <Popup\r\n                  trigger={\r\n                    <button className=\"button\"> Silhouette Import </button>\r\n                  }\r\n                  modal\r\n                >\r\n                  <Row>\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.props.onHandleUploadedSilhouetteMainFiles}\r\n                    ></input>{\" \"}\r\n                    <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                      Upload Silhouette Main\r\n                    </Button>\r\n                  </Row>\r\n                  <Row className=\"mt-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.props.onHandleUploadedSilhouetteMaskFiles}\r\n                    ></input>{\" \"}\r\n                    <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                      Upload Silhouette Mask\r\n                    </Button>\r\n                  </Row>\r\n                  <Row className=\"justify-content-md-center mt-3\">\r\n                    <Button\r\n                      variant={this.props.buttonProcessing[1]}\r\n                      onClick={this.props.onHandleSilhouettesCombine}\r\n                    >\r\n                      {this.props.buttonProcessing[2]}\r\n                    </Button>\r\n                  </Row>\r\n                </Popup>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div>\r\n                <label\r\n                  for=\"files\"\r\n                  class=\"btn\"\r\n                  className=\"mt-2\"\r\n                  style={{ color: \"red\" }}\r\n                >\r\n                  Upload custom patterns below\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.props.onHandleUploadedPatternFiles}\r\n                  multiple=\"multiple\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  bsPrefix=\"super-btn\"\r\n                  variant=\"primary\"\r\n                  onClick={this.props.onPatternFilesUploadData}\r\n                >\r\n                  Upload Patterns\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MainDesign);\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageCMT.jsx",["103","104","105","106"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\navBar.jsx",["107","108"],"import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst NavBar = (props) => {\r\n  const { onCanvasScreen } = props;\r\n\r\n  const getBarType = () => {\r\n    if (onCanvasScreen) {\r\n      return (\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n          <Navbar.Brand>Costing</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/add-component\" target=\"_blank\">\r\n              Dashboard\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      );\r\n    } else {\r\n      return (\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n          <Navbar.Brand>Costing</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/add-component\">\r\n              Add Component\r\n            </Nav.Link>\r\n            {/* <Nav.Link href=\"#features\">Features</Nav.Link> */}\r\n            <Nav.Link as={Link} to=\"/admin-bom\">\r\n              BOM\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/admin-cmt\">\r\n              CMT\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <React.Fragment>{getBarType()}</React.Fragment>;\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\fabricCanvas.jsx",["109","110","111","112"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport EditingCanvas from \"./editingCanvas\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Fabric_Canvas_My = (props) => {\r\n  const {\r\n    currentComp,\r\n    currentSilhouette,\r\n    silhouetteRenderSwitch,\r\n    componentRenderSwitch,\r\n    patternRenderSwitch,\r\n    currentPatternComp,\r\n    deleteActiveObject,\r\n    compDict,\r\n    bgColor,\r\n  } = props;\r\n\r\n  var editButtonRef = useRef(null);\r\n\r\n  const [canvas, setCanvas] = useState(\"\");\r\n  useEffect(() => {\r\n    setCanvas(initCanvas());\r\n  }, []);\r\n\r\n  const initCanvas = () =>\r\n    new fabric.Canvas(\"canvas\", {\r\n      height: 500,\r\n      width: 700,\r\n      // backgroundColor: \"red\",\r\n    });\r\n\r\n  let comp = new Image();\r\n  var comp_ = new fabric.Image(comp);\r\n\r\n  // let patternImg = new Image();\r\n  // var patternImg_ = new fabric.Image(patternImg);\r\n\r\n  let main = new Image();\r\n  let mask = new Image();\r\n  var main_ = new fabric.Image(main);\r\n  var mask_ = new fabric.Image(mask);\r\n\r\n  var componentsGroup = new fabric.Group();\r\n  var silhouettesGroup = new fabric.Group();\r\n  var patternsGroup = new fabric.Group();\r\n\r\n  var localEditComp;\r\n\r\n  //Object renditions\r\n  const addComponent = () => {\r\n    comp.src = currentComp;\r\n    comp_ = new fabric.Image(comp); //left, top are used to indicate the inital render position of the object\r\n    componentsGroup.addWithUpdate(comp_);\r\n\r\n    canvas.on(\"selection:created\", function (options) {\r\n      // editButtonRef.current.disabled = false;\r\n      editButtonRef.current.style.visibility = \"visible\";\r\n    });\r\n\r\n    canvas.on(\"selection:cleared\", function (options) {\r\n      // editButtonRef.current.variant = true;\r\n      editButtonRef.current.style.visibility = \"hidden\";\r\n    });\r\n\r\n    canvas.add(comp_);\r\n  };\r\n\r\n  const getEditedObjectSrc = (objSrc) => {\r\n    addEditedObject(objSrc);\r\n  };\r\n\r\n  //removes selected object and adds the edited object in its place\r\n  const addEditedObject = (localSrc) => {\r\n    //getting position of the original object\r\n\r\n    let editedCompImage = new Image();\r\n    editedCompImage.src = localSrc;\r\n    let editedObjectToRender = new fabric.Image(editedCompImage, {\r\n      top: localEditComp.top + localEditComp.height / 2,\r\n      left: localEditComp.left + localEditComp.width / 2,\r\n    });\r\n    canvas.remove(localEditComp);\r\n    canvas.add(editedObjectToRender);\r\n  };\r\n\r\n  const addSilhouette = () => {\r\n    main.src = currentSilhouette[0].comp;\r\n    mask.src = currentSilhouette[1].comp;\r\n\r\n    main_ = new fabric.Image(main, { selectable: false });\r\n    mask_ = new fabric.Image(mask, { selectable: false });\r\n\r\n    canvas.add(main_);\r\n    canvas.add(mask_);\r\n    canvas.renderAll();\r\n  };\r\n\r\n  const addPattern = () => {\r\n    var patternImg = new Image();\r\n    patternImg.src = currentPatternComp;\r\n    console.log(patternImg.src);\r\n    let patternImg_ = new fabric.Image(patternImg);\r\n\r\n    canvas.setBackgroundImage(patternImg_);\r\n  };\r\n\r\n  const removeObject = () => {\r\n    canvas.remove(canvas.getActiveObject());\r\n  };\r\n\r\n  const editingObjectGetter = () => {\r\n    localEditComp = canvas.getActiveObject();\r\n    return canvas.getActiveObject();\r\n  };\r\n\r\n  if (silhouetteRenderSwitch) {\r\n    addSilhouette();\r\n  }\r\n\r\n  if (componentRenderSwitch) {\r\n    addComponent();\r\n  }\r\n\r\n  if (patternRenderSwitch) {\r\n    addPattern();\r\n  }\r\n\r\n  // if (colorRenderSwitch) {\r\n  //   addColor();\r\n  // }\r\n\r\n  if (deleteActiveObject && canvas.getActiveObject() != null) {\r\n    removeObject();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <canvas id=\"canvas\" />\r\n      </Row>\r\n      <Row>\r\n        <EditingCanvas\r\n          editFun={editingObjectGetter}\r\n          forwardedRef={editButtonRef}\r\n          setEditedObjectSrc={getEditedObjectSrc}\r\n          compDict={compDict}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fabric_Canvas_My;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\toolBar.jsx",["113"],"import React, { Component } from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport ComponentDropdown from \"./componentDropdown\";\r\nimport EyeDropTool from \"./eyeDropTool\";\r\nimport PatternDropdown from \"./patternDropdown\";\r\nimport SilhouettesDropdown from \"./silhouettesDropdown\";\r\n\r\nclass ToolBar extends Component {\r\n  state = { editButtonDisplay: \"none\" };\r\n\r\n  render() {\r\n    return (\r\n      <ButtonGroup vertical>\r\n        <EyeDropTool\r\n          onHandleColorChangeComplete={this.props.onHandleColorChangeComplete}\r\n          bgColor={this.props.bgColor}\r\n          onHandleColorUpload={this.props.onHandleColorUpload}\r\n        />\r\n        <ComponentDropdown\r\n          label=\"Components\"\r\n          uploadedComponentFiles={this.props.uploadedComponentFiles}\r\n          importedComponentFiles={this.props.importedComponentFiles}\r\n          drawComponent={this.props.drawComponent}\r\n        ></ComponentDropdown>\r\n        <SilhouettesDropdown\r\n          label=\"Silhouettes\"\r\n          combinedSilhouettesArray={this.props.combinedSilhouettesArray}\r\n          drawSilhouettes={this.props.drawSilhouettes}\r\n        ></SilhouettesDropdown>\r\n        <PatternDropdown\r\n          label=\"Patterns\"\r\n          uploadedPatternFiles={this.props.uploadedPatternFiles}\r\n          drawPattern={this.props.drawPattern}\r\n        />\r\n        {/* <Button variant=\"danger\" style={{ display: \"true\" }}>\r\n          Edit\r\n        </Button> */}\r\n      </ButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminGetItemType.jsx",["114"],"import React, { Component, useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\n\r\nconst AdminGetItemType = (props) => {\r\n  const [titleTxt, setTitleTxt] = useState(\"Select Type\"); //React hook\r\n  const { rawArray, inRow, onItemTypeSelected } = props;\r\n  \r\n  let typeArray = [];\r\n  rawArray.forEach((element) => {\r\n    if (typeArray.includes(element.type)) {\r\n    } else {\r\n      typeArray.push(element.type);\r\n    }\r\n  });\r\n\r\n  const handleOnClick = (element) => {\r\n    setTitleTxt(element);\r\n    onItemTypeSelected(inRow, element);\r\n  };\r\n\r\n  return (\r\n    <DropdownButton title={titleTxt}>\r\n      {typeArray.map((element) => (\r\n        <Dropdown.Item key={element} onClick={() => handleOnClick(element)}>\r\n          {element}\r\n        </Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  );\r\n};\r\n\r\nexport default AdminGetItemType;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\componentDropdown.jsx",["115","116","117","118"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst ComponentDropdown = (props) => {\r\n  const {\r\n    label,\r\n    uploadedComponentFiles,\r\n    importedComponentFiles,\r\n    drawComponent,\r\n  } = props;\r\n  var componentFiles = importedComponentFiles;\r\n  // console.log(componentFiles);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {importedComponentFiles.map((comp) => (\r\n          <Dropdown.Item\r\n            onClick={() => drawComponent(comp.comp, comp.name, comp.config)}\r\n            key={comp.name}\r\n          >\r\n            {comp.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ComponentDropdown;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\editingCanvas.jsx",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { Row, Button, Col } from \"react-bootstrap\";\r\nimport {\r\n  ChromePicker,\r\n  HuePicker,\r\n  PhotoshopPicker,\r\n  SliderPicker,\r\n} from \"react-color\";\r\nimport _ from \"lodash\";\r\n\r\nconst EditingCanvas = (props) => {\r\n  const {\r\n    editFun,\r\n    isEditingModeOn,\r\n    forwardedRef,\r\n    setEditedObjectSrc,\r\n    compDict,\r\n  } = props;\r\n\r\n  const [canvas2, setCanvas] = useState(\"\");\r\n  useEffect(() => {\r\n    setCanvas(initCanvas());\r\n  }, []);\r\n\r\n  const initCanvas = () =>\r\n    new fabric.StaticCanvas(\"canvas2\", {\r\n      height: 500,\r\n      width: 700,\r\n      // backgroundColor: \"yellow\",\r\n    });\r\n\r\n  var objectToRender;\r\n  var localSrc;\r\n  var k = 0;\r\n  var selectedColor;\r\n  var bgColor;\r\n\r\n  const handleChangeComplete = (color) => {\r\n    selectedColor = color;\r\n    bgColor = color.hex;\r\n    newColor();\r\n  };\r\n\r\n  const RenderEditableObject = () => {\r\n    objectToRender = editFun();\r\n    // canvas2.add(objectToRender);\r\n    canvas2.renderAll();\r\n  };\r\n\r\n  const getBase64Image = (img) => {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    let red = 255,\r\n      green = 255,\r\n      blue = 255,\r\n      targetRed = 255,\r\n      targetGreen = 255,\r\n      targetBlue = 255;\r\n\r\n    if (selectedColor !== null) {\r\n      red = selectedColor.rgb.r;\r\n      green = selectedColor.rgb.g;\r\n      blue = selectedColor.rgb.b;\r\n    }\r\n\r\n    var imgDataInit = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    let imgd = imgDataInit.data;\r\n\r\n    let checkerArray = [];\r\n    let dictOfOccurences = {};\r\n\r\n    for (var i = 0, n = imgd.length; i < n; i += 4) {\r\n      let r = imgd[i];\r\n      let g = imgd[i + 1];\r\n      let b = imgd[i + 2];\r\n\r\n      let checkerRGB = { red: r, green: g, blue: b };\r\n\r\n      var incld = checkerArray.some((elem) => {\r\n        return JSON.stringify(checkerRGB) === JSON.stringify(elem);\r\n      });\r\n\r\n      if (incld) {\r\n        if (dictOfOccurences[JSON.stringify(checkerRGB)] === undefined) {\r\n          dictOfOccurences[JSON.stringify(checkerRGB)] = 1;\r\n        } else {\r\n          dictOfOccurences[JSON.stringify(checkerRGB)] =\r\n            dictOfOccurences[JSON.stringify(checkerRGB)] + 1;\r\n        }\r\n      } else {\r\n        checkerArray.push(checkerRGB);\r\n      }\r\n    }\r\n    let objKey = Object.keys(dictOfOccurences).reduce((a, b) =>\r\n      dictOfOccurences[a] > dictOfOccurences[b] ? a : b\r\n    );\r\n\r\n    if (objKey === JSON.stringify({ red: 0, green: 0, blue: 0 })) {\r\n      delete dictOfOccurences[JSON.stringify({ red: 0, green: 0, blue: 0 })];\r\n      objKey = Object.keys(dictOfOccurences).reduce((a, b) =>\r\n        dictOfOccurences[a] > dictOfOccurences[b] ? a : b\r\n      );\r\n    }\r\n\r\n    let parsedObjKey = JSON.parse(objKey);\r\n\r\n    for (var i = 0, n = imgd.length; i < n; i += 4) {\r\n      let r = imgd[i];\r\n      let g = imgd[i + 1];\r\n      let b = imgd[i + 2];\r\n\r\n      if (\r\n        r === parsedObjKey.red &&\r\n        g === parsedObjKey.green &&\r\n        b === parsedObjKey.blue\r\n      ) {\r\n        imgd[i] = selectedColor.rgb.r;\r\n        imgd[i + 1] = selectedColor.rgb.g;\r\n        imgd[i + 2] = selectedColor.rgb.b;\r\n      }\r\n    }\r\n    ctx.putImageData(imgDataInit, 0, 0);\r\n    return canvas.toDataURL();\r\n  };\r\n\r\n  const newColor = () => {\r\n    canvas2.clear();\r\n    var originalSource = objectToRender._originalElement.currentSrc;\r\n    var locImg = new Image();\r\n    locImg.src = originalSource;\r\n\r\n    localSrc = getBase64Image(locImg);\r\n    locImg.src = localSrc;\r\n\r\n    let newImageToRender = new fabric.Image(locImg, {\r\n      top: 20,\r\n      left: 30,\r\n    }); //make sure the position is same later on\r\n    canvas2.add(newImageToRender);\r\n  };\r\n\r\n  const exportComponent = () => {\r\n    setEditedObjectSrc(localSrc);\r\n    canvas2.clear();\r\n  };\r\n\r\n  return (\r\n    <div ref={forwardedRef} style={{ visibility: \"hidden\" }}>\r\n      <Row xs={4} className=\"justify-content-md-center\">\r\n        {\" \"}\r\n        {/* Have to add this button in this file because of bug in fabric.js */}\r\n        <Button className=\"btn-danger\" onClick={() => RenderEditableObject()}>\r\n          Edit\r\n        </Button>\r\n        <HuePicker\r\n          color={bgColor}\r\n          onChangeComplete={handleChangeComplete}\r\n          className=\"ml-3\"\r\n        />\r\n      </Row>\r\n      <Row className=\"justify-content-md-center mt-2\">\r\n        <Button onClick={() => exportComponent()}>Export</Button>\r\n        <canvas id=\"canvas2\" />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditingCanvas;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\eyeDropTool.jsx",["137","138"],"import { ButtonGroup, Button, Overlay } from \"react-bootstrap\";\r\nimport React, { Component, useState, useRef } from \"react\";\r\nimport { FaEyeDropper } from \"react-icons/fa\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nconst EyeDropTool = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  const { onHandleColorChangeComplete, bgColor, onHandleColorUpload } = props;\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" ref={target} onClick={() => setShow(!show)}>\r\n        <FaEyeDropper /> Color\r\n      </Button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n          <div\r\n            {...props}\r\n            style={{\r\n              backgroundColor: \"alpha\",\r\n              padding: \"2px 10px\",\r\n              color: \"white\",\r\n              borderRadius: 3,\r\n              ...props.style,\r\n            }}\r\n            className=\"row justify-content-center align-self-center\"\r\n          >\r\n            <ChromePicker\r\n              color={bgColor}\r\n              onChangeComplete={onHandleColorChangeComplete}\r\n            />\r\n            <Button variant=\"dark\" onClick={() => onHandleColorUpload()}>\r\n              Double <br /> Click to <br /> Upload\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EyeDropTool;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\patternDropdown.jsx",["139","140"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst PatternDropdown = (props) => {\r\n  const { label, uploadedPatternFiles, drawPattern } = props;\r\n  var componentFiles = uploadedPatternFiles;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {componentFiles.map((comp) => (\r\n          <Dropdown.Item key={comp.size} onClick={() => drawPattern(comp.comp)}>\r\n            {comp.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n        {/* <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item> */}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatternDropdown;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\silhouettesDropdown.jsx",["141","142"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst SilhouettesDropdown = (props) => {\r\n  const { label, drawSilhouettes, combinedSilhouettesArray } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {combinedSilhouettesArray.map((comp) => (\r\n          <Dropdown.Item\r\n            key={comp[0].size}\r\n            onClick={() => drawSilhouettes(comp)}\r\n          >\r\n            {comp[0].name}\r\n          </Dropdown.Item>\r\n        ))}\r\n        {/* <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item> */}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SilhouettesDropdown;\r\n",{"ruleId":"143","severity":1,"message":"144","line":7,"column":25,"nodeType":"145","messageId":"146","endLine":7,"endColumn":30},{"ruleId":"143","severity":1,"message":"147","line":7,"column":32,"nodeType":"145","messageId":"146","endLine":7,"endColumn":38},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"143","severity":1,"message":"152","line":1,"column":28,"nodeType":"145","messageId":"146","endLine":1,"endColumn":37},{"ruleId":"143","severity":1,"message":"147","line":2,"column":17,"nodeType":"145","messageId":"146","endLine":2,"endColumn":23},{"ruleId":"143","severity":1,"message":"153","line":2,"column":25,"nodeType":"145","messageId":"146","endLine":2,"endColumn":35},{"ruleId":"143","severity":1,"message":"154","line":7,"column":14,"nodeType":"145","messageId":"146","endLine":7,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":129,"column":26,"nodeType":"157","messageId":"158","endLine":129,"endColumn":28},{"ruleId":"155","severity":1,"message":"156","line":139,"column":26,"nodeType":"157","messageId":"158","endLine":139,"endColumn":28},{"ruleId":"143","severity":1,"message":"159","line":1,"column":28,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"160","line":3,"column":3,"nodeType":"145","messageId":"146","endLine":3,"endColumn":6},{"ruleId":"143","severity":1,"message":"154","line":14,"column":14,"nodeType":"145","messageId":"146","endLine":14,"endColumn":18},{"ruleId":"143","severity":1,"message":"154","line":3,"column":14,"nodeType":"145","messageId":"146","endLine":3,"endColumn":18},{"ruleId":"143","severity":1,"message":"161","line":6,"column":27,"nodeType":"145","messageId":"146","endLine":6,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":32,"column":37,"nodeType":"157","messageId":"158","endLine":32,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":34,"column":44,"nodeType":"157","messageId":"158","endLine":34,"endColumn":46},{"ruleId":"155","severity":1,"message":"156","line":77,"column":42,"nodeType":"157","messageId":"158","endLine":77,"endColumn":44},{"ruleId":"162","severity":1,"message":"163","line":53,"column":15,"nodeType":"164","endLine":62,"endColumn":16},{"ruleId":"143","severity":1,"message":"154","line":3,"column":14,"nodeType":"145","messageId":"146","endLine":3,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":32,"column":37,"nodeType":"157","messageId":"158","endLine":32,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":34,"column":44,"nodeType":"157","messageId":"158","endLine":34,"endColumn":46},{"ruleId":"155","severity":1,"message":"156","line":77,"column":42,"nodeType":"157","messageId":"158","endLine":77,"endColumn":44},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"166","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":23},{"ruleId":"143","severity":1,"message":"167","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":16},{"ruleId":"143","severity":1,"message":"168","line":17,"column":5,"nodeType":"145","messageId":"146","endLine":17,"endColumn":12},{"ruleId":"143","severity":1,"message":"169","line":46,"column":7,"nodeType":"145","messageId":"146","endLine":46,"endColumn":23},{"ruleId":"143","severity":1,"message":"170","line":47,"column":7,"nodeType":"145","messageId":"146","endLine":47,"endColumn":20},{"ruleId":"143","severity":1,"message":"167","line":2,"column":23,"nodeType":"145","messageId":"146","endLine":2,"endColumn":29},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"171","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":18},{"ruleId":"143","severity":1,"message":"172","line":9,"column":5,"nodeType":"145","messageId":"146","endLine":9,"endColumn":27},{"ruleId":"143","severity":1,"message":"173","line":13,"column":7,"nodeType":"145","messageId":"146","endLine":13,"endColumn":21},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"174","line":1,"column":49,"nodeType":"145","messageId":"146","endLine":1,"endColumn":55},{"ruleId":"143","severity":1,"message":"160","line":3,"column":23,"nodeType":"145","messageId":"146","endLine":3,"endColumn":26},{"ruleId":"143","severity":1,"message":"175","line":5,"column":3,"nodeType":"145","messageId":"146","endLine":5,"endColumn":15},{"ruleId":"143","severity":1,"message":"176","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":7,"endColumn":18},{"ruleId":"143","severity":1,"message":"177","line":8,"column":3,"nodeType":"145","messageId":"146","endLine":8,"endColumn":15},{"ruleId":"143","severity":1,"message":"178","line":10,"column":8,"nodeType":"145","messageId":"146","endLine":10,"endColumn":9},{"ruleId":"143","severity":1,"message":"179","line":15,"column":5,"nodeType":"145","messageId":"146","endLine":15,"endColumn":20},{"ruleId":"143","severity":1,"message":"180","line":18,"column":5,"nodeType":"145","messageId":"146","endLine":18,"endColumn":13},{"ruleId":"143","severity":1,"message":"181","line":35,"column":7,"nodeType":"145","messageId":"146","endLine":35,"endColumn":8},{"ruleId":"143","severity":1,"message":"182","line":62,"column":7,"nodeType":"145","messageId":"146","endLine":62,"endColumn":16},{"ruleId":"143","severity":1,"message":"183","line":63,"column":7,"nodeType":"145","messageId":"146","endLine":63,"endColumn":18},{"ruleId":"143","severity":1,"message":"184","line":64,"column":7,"nodeType":"145","messageId":"146","endLine":64,"endColumn":17},{"ruleId":"143","severity":1,"message":"185","line":67,"column":7,"nodeType":"145","messageId":"146","endLine":67,"endColumn":10},{"ruleId":"143","severity":1,"message":"186","line":68,"column":7,"nodeType":"145","messageId":"146","endLine":68,"endColumn":12},{"ruleId":"143","severity":1,"message":"187","line":69,"column":7,"nodeType":"145","messageId":"146","endLine":69,"endColumn":11},{"ruleId":"188","severity":1,"message":"189","line":113,"column":14,"nodeType":"145","messageId":"190","endLine":113,"endColumn":15},{"ruleId":"188","severity":1,"message":"191","line":113,"column":21,"nodeType":"145","messageId":"190","endLine":113,"endColumn":22},{"ruleId":"143","severity":1,"message":"192","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":21},{"ruleId":"143","severity":1,"message":"165","line":2,"column":17,"nodeType":"145","messageId":"146","endLine":2,"endColumn":26},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"171","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":18},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"171","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":18},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],"'createRef' is defined but never used.","'withRouter' is defined but never used.","'auth' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Col' is defined but never used.","'AiFillEdit' is defined but never used.","react/jsx-pascal-case","Imported JSX component Fabric_Canvas_My must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Component' is defined but never used.","'LinkContainer' is defined but never used.","'Button' is defined but never used.","'bgColor' is assigned a value but never used.","'silhouettesGroup' is assigned a value but never used.","'patternsGroup' is assigned a value but never used.","'FaTshirt' is defined but never used.","'uploadedComponentFiles' is assigned a value but never used.","'componentFiles' is assigned a value but never used.","'useRef' is defined but never used.","'ChromePicker' is defined but never used.","'PhotoshopPicker' is defined but never used.","'SliderPicker' is defined but never used.","'_' is defined but never used.","'isEditingModeOn' is assigned a value but never used.","'compDict' is assigned a value but never used.","'k' is assigned a value but never used.","'targetRed' is assigned a value but never used.","'targetGreen' is assigned a value but never used.","'targetBlue' is assigned a value but never used.","'red' is assigned a value but never used.","'green' is assigned a value but never used.","'blue' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'n' is already defined.","'ButtonGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]