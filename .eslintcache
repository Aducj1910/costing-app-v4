[{"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\index.js":"1","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\reportWebVitals.js":"2","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\App.js":"3","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\services\\firebase.js":"4","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addComponentPage.jsx":"5","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageBOM.jsx":"6","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\mainDesign.jsx":"7","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageCMT.jsx":"8","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\navBar.jsx":"9","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\fabricCanvas.jsx":"10","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\toolBar.jsx":"11","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminGetItemType.jsx":"12","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\componentDropdown.jsx":"13","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\editingCanvas.jsx":"14","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\eyeDropTool.jsx":"15","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\patternDropdown.jsx":"16","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\silhouettesDropdown.jsx":"17","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addSilhouettePage.jsx":"18","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addPatternPage.jsx":"19"},{"size":639,"mtime":1612030829082,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1612030829083,"results":"22","hashOfConfig":"21"},{"size":16487,"mtime":1612551907719,"results":"23","hashOfConfig":"21"},{"size":575,"mtime":1612363589221,"results":"24","hashOfConfig":"21"},{"size":12139,"mtime":1612552075683,"results":"25","hashOfConfig":"21"},{"size":6112,"mtime":1612503674068,"results":"26","hashOfConfig":"21"},{"size":3611,"mtime":1612548836037,"results":"27","hashOfConfig":"21"},{"size":5724,"mtime":1612504089732,"results":"28","hashOfConfig":"21"},{"size":1501,"mtime":1612551042733,"results":"29","hashOfConfig":"21"},{"size":3953,"mtime":1612549081527,"results":"30","hashOfConfig":"21"},{"size":1654,"mtime":1612548836066,"results":"31","hashOfConfig":"21"},{"size":869,"mtime":1612083748114,"results":"32","hashOfConfig":"21"},{"size":1176,"mtime":1612541571207,"results":"33","hashOfConfig":"21"},{"size":4684,"mtime":1612030829080,"results":"34","hashOfConfig":"21"},{"size":1423,"mtime":1612030829080,"results":"35","hashOfConfig":"21"},{"size":1097,"mtime":1612546656676,"results":"36","hashOfConfig":"21"},{"size":1076,"mtime":1612548836067,"results":"37","hashOfConfig":"21"},{"size":2681,"mtime":1612549625969,"results":"38","hashOfConfig":"21"},{"size":2161,"mtime":1612546010751,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"a6lu8p",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\index.js",["93","94"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"fabric\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["95","96"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\reportWebVitals.js",[],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\App.js",["97","98","99","100","101","102","103","104","105","106","107","108","109"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\services\\firebase.js",[],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addComponentPage.jsx",["110","111","112","113","114","115","116","117"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageBOM.jsx",["118","119","120","121","122"],"import React, { Component } from \"react\";\r\nimport NavBar from \"./navBar\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { BsPlusCircleFill } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete, AiFillEdit, AiTwotoneEdit } from \"react-icons/ai\";\r\nimport { FcCheckmark } from \"react-icons/fc\";\r\n\r\nclass AdminPageBOM extends Component {\r\n  state = {\r\n    BOMItemsArray: [],\r\n    customRowAddBool: false,\r\n    currentIdEditing: -1,\r\n  };\r\n\r\n  deleteBOMItem = (itemToDelId) => {\r\n    console.log(itemToDelId);\r\n    db.collection(\"BOM\")\r\n      .doc(itemToDelId)\r\n      .delete()\r\n      .then(\r\n        function () {\r\n          this.handleBOMItemsImport();\r\n        }.bind(this)\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  editBOMItem = (itemToEditId) => {\r\n    if (this.state.currentIdEditing == -1) {\r\n      this.setState({ currentIdEditing: itemToEditId });\r\n    } else if (this.state.currentIdEditing == itemToEditId) {\r\n      let nameToPush = document.getElementById(itemToEditId + \"name\").value;\r\n      let typeToPush = document.getElementById(itemToEditId + \"type\").value;\r\n      let unitToPush = document.getElementById(itemToEditId + \"unit\").value;\r\n      let rateToPush = document.getElementById(itemToEditId + \"rate\").value;\r\n      db.collection(\"BOM\").doc(itemToEditId).update({\r\n        name: nameToPush,\r\n        type: typeToPush,\r\n        unit: unitToPush,\r\n        rate: rateToPush,\r\n      });\r\n      this.setState({ currentIdEditing: -1 });\r\n    }\r\n  };\r\n\r\n  getBOMTableContent = () => {\r\n    //BOM TABLE CONTENT RENDER\r\n    return this.state.BOMItemsArray.map((item) => (\r\n      <tr key={item.id}>\r\n        <td>{item.id}</td>\r\n        <td>\r\n          <input id={item.id + \"name\"} type=\"text\" defaultValue={item.name} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"type\"} type=\"text\" defaultValue={item.type} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"unit\"} type=\"text\" defaultValue={item.unit} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"rate\"} type=\"text\" defaultValue={item.rate} />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteBOMItem(item.id)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.editBOMItem(item.id)}\r\n          >\r\n            {this.state.currentIdEditing == item.id ? (\r\n              <FcCheckmark />\r\n            ) : (\r\n              <AiTwotoneEdit />\r\n            )}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleBOMItemsImport();\r\n  };\r\n\r\n  handleBOMItemsImport = () => {\r\n    console.log(\"Called\");\r\n    db.collection(\"BOM\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtBOMItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtBOMItemsArray.push(data);\r\n        });\r\n        this.setState({\r\n          BOMItemsArray: pvtBOMItemsArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  pushNewData = () => {\r\n    let addedId = document.getElementById(\"customRowId\").value;\r\n    let addedName = document.getElementById(\"customRowName\").value;\r\n    let addedType = document.getElementById(\"customRowType\").value;\r\n    let addedUnit = document.getElementById(\"customRowUnit\").value;\r\n    let addedRate = document.getElementById(\"customRowRate\").value;\r\n\r\n    db.collection(\"BOM\").doc(addedId).set({\r\n      name: addedName,\r\n      type: addedType,\r\n      unit: addedUnit,\r\n      rate: addedRate,\r\n      id: addedId,\r\n    });\r\n\r\n    this.handleBOMItemsImport();\r\n    this.deleteCustomRowData();\r\n  };\r\n\r\n  deleteCustomRowData = () => {\r\n    document.getElementById(\"customRowId\").value = \"\";\r\n    document.getElementById(\"customRowName\").value = \"\";\r\n    document.getElementById(\"customRowType\").value = \"\";\r\n    document.getElementById(\"customRowUnit\").value = \"\";\r\n    document.getElementById(\"customRowRate\").value = \"\";\r\n  };\r\n\r\n  addCustomRow = () => {\r\n    //ADDING NEW DATA\r\n    return (\r\n      <tr>\r\n        <td>\r\n          Id: <input id=\"customRowId\" type=\"text\" style={{ width: 50 }} />{\" \"}\r\n        </td>\r\n        <td>\r\n          Name: <input id=\"customRowName\" />\r\n        </td>\r\n        <td>\r\n          Type: <input id=\"customRowType\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          Unit: <input id=\"customRowUnit\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          Rate: <input id=\"customRowRate\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.pushNewData()}\r\n          >\r\n            <FcCheckmark />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteCustomRowData()}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main_table\">\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Item name</th>\r\n              <th>Item type</th>\r\n              <th>Unit</th>\r\n              <th>Rate (in Rs)</th>\r\n              <th>\r\n                <button\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                  onClick={() => this.setState({ customRowAddBool: true })}\r\n                >\r\n                  <BsPlusCircleFill />\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.getBOMTableContent()}{\" \"}\r\n            {this.state.customRowAddBool ? this.addCustomRow() : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminPageBOM;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\mainDesign.jsx",["123","124","125"],"import React, { Component } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Fabric_Canvas_My from \"./fabricCanvas\";\r\nimport NavBar from \"./navBar\";\r\nimport ToolBar from \"./toolBar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CountUp from \"react-countup\";\r\n\r\nclass MainDesign extends Component {\r\n  state = { display: \"yes\" };\r\n\r\n  render() {\r\n    // console.log(this.props.location.pathname);\r\n    // if (this.props.location.pathname === \"/\" && this.state.display !== \"yes\") {\r\n    //   this.setState({ display: \"yes\" });\r\n    // } else if (\r\n    //   this.props.location.pathname === \"/add-component\" &&\r\n    //   this.state.display !== \"none\"\r\n    // ) {\r\n    //   this.setState({ display: \"none\" });\r\n    // }\r\n    return (\r\n      <div style={{ display: this.state.display }}>\r\n        <header>\r\n          <NavBar onCanvasScreen={true}></NavBar>\r\n        </header>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"m-2\" xs={1}>\r\n              <ToolBar\r\n                uploadedComponentFiles={this.props.uploadedComponentFiles}\r\n                uploadedPatternFiles={this.props.uploadedPatternFiles}\r\n                importedComponentFiles={this.props.importedComponentFiles}\r\n                hiddenRef={this.props.hiddenRef}\r\n                drawComponent={this.props.drawComponent}\r\n                combinedSilhouettesArray={this.props.combinedSilhouettesArray}\r\n                drawSilhouettes={this.props.drawSilhouettes}\r\n                drawPattern={this.props.drawPattern}\r\n                onHandleColorChangeComplete={\r\n                  this.props.onHandleColorChangeComplete\r\n                }\r\n                bgColor={this.props.bgColor}\r\n                onHandleColorUpload={this.props.onHandleColorUpload}\r\n              ></ToolBar>\r\n            </Col>\r\n            <Col className=\"ml-3\">\r\n              {/* <Canvas\r\n                currentComp={this.props.currentComp}\r\n                componentRenderSwitch={this.props.componentRenderSwitch}\r\n                currentSilhouette={this.props.currentSilhouette}\r\n                silhouetteRenderSwitch={this.props.silhsouetteRenderSwitch}\r\n              ></Canvas> */}\r\n              <Fabric_Canvas_My\r\n                currentComp={this.props.currentComp}\r\n                componentRenderSwitch={this.props.componentRenderSwitch}\r\n                currentSilhouette={this.props.currentSilhouette}\r\n                silhouetteRenderSwitch={this.props.silhouetteRenderSwitch}\r\n                patternRenderSwitch={this.props.patternRenderSwitch}\r\n                currentPatternComp={this.props.currentPatternComp}\r\n                deleteActiveObject={this.props.deleteActiveObject}\r\n                compDict={this.props.compDict}\r\n              ></Fabric_Canvas_My>\r\n            </Col>\r\n            <Col ml=\"2\">\r\n              <div>\r\n                <Row>\r\n                  <h3 className=\"mt-4\">Cost estimate:</h3>\r\n                </Row>\r\n                <Row>\r\n                  <h3>\r\n                    <CountUp\r\n                      prefix={\"₹\"}\r\n                      start={50}\r\n                      end={10000}\r\n                      duration={0.8}\r\n                    />\r\n                  </h3>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            {/* <Col ml=\"2\">\r\n              <div>\r\n                <label\r\n                  for=\"files\"\r\n                  class=\"btn\"\r\n                  className=\"mt-2\"\r\n                  style={{ color: \"red\" }}\r\n                >\r\n                  Upload custom components below\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.props.onHandleUploadedComponentFiles}\r\n                  multiple=\"multiple\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  bsPrefix=\"super-btn\"\r\n                  variant=\"primary\"\r\n                  onClick={this.props.onComponentFilesUploadData}\r\n                >\r\n                  Upload Components\r\n                </Button>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <label style={{ color: \"red\" }}>Upload silhouettes below</label>\r\n              </div>\r\n              <div>\r\n                <Popup\r\n                  trigger={\r\n                    <button className=\"button\"> Silhouette Import </button>\r\n                  }\r\n                  modal\r\n                >\r\n                  <Row>\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.props.onHandleUploadedSilhouetteMainFiles}\r\n                    ></input>{\" \"}\r\n                    <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                      Upload Silhouette Main\r\n                    </Button>\r\n                  </Row>\r\n                  <Row className=\"mt-3\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.props.onHandleUploadedSilhouetteMaskFiles}\r\n                    ></input>{\" \"}\r\n                    <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                      Upload Silhouette Mask\r\n                    </Button>\r\n                  </Row>\r\n                  <Row className=\"justify-content-md-center mt-3\">\r\n                    <Button\r\n                      variant={this.props.buttonProcessing[1]}\r\n                      onClick={this.props.onHandleSilhouettesCombine}\r\n                    >\r\n                      {this.props.buttonProcessing[2]}\r\n                    </Button>\r\n                  </Row>\r\n                </Popup>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div>\r\n                <label\r\n                  for=\"files\"\r\n                  class=\"btn\"\r\n                  className=\"mt-2\"\r\n                  style={{ color: \"red\" }}\r\n                >\r\n                  Upload custom patterns below\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.props.onHandleUploadedPatternFiles}\r\n                  multiple=\"multiple\"\r\n                />\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button\r\n                  bsPrefix=\"super-btn\"\r\n                  variant=\"primary\"\r\n                  onClick={this.props.onPatternFilesUploadData}\r\n                >\r\n                  Upload Patterns\r\n                </Button>\r\n              </div>\r\n            </Col> */}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MainDesign);\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageCMT.jsx",["126","127","128","129"],"import React, { Component } from \"react\";\r\nimport NavBar from \"./navBar\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { BsPlusCircleFill } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete, AiTwotoneEdit } from \"react-icons/ai\";\r\nimport { FcCheckmark } from \"react-icons/fc\";\r\n\r\nclass AdminPageCMT extends Component {\r\n  state = {\r\n    CMTItemsArray: [],\r\n    customRowAddBool: false,\r\n    currentIdEditing: -1,\r\n  };\r\n\r\n  deleteCMTItem = (itemToDelId) => {\r\n    console.log(itemToDelId);\r\n    db.collection(\"CMT\")\r\n      .doc(itemToDelId)\r\n      .delete()\r\n      .then(\r\n        function () {\r\n          this.handleCMTItemsImport();\r\n        }.bind(this)\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  editCMTItem = (itemToEditId) => {\r\n    console.log(itemToEditId);\r\n    if (this.state.currentIdEditing == -1) {\r\n      this.setState({ currentIdEditing: itemToEditId });\r\n    } else if (this.state.currentIdEditing == itemToEditId) {\r\n      let activityToPush = document.getElementById(itemToEditId + \"activity\")\r\n        .value;\r\n      let unitToPush = document.getElementById(itemToEditId + \"unit\").value;\r\n      let rateToPush = document.getElementById(itemToEditId + \"rate\").value;\r\n      db.collection(\"CMT\").doc(itemToEditId).update({\r\n        activity: activityToPush,\r\n        unit: unitToPush,\r\n        rate: rateToPush,\r\n      });\r\n      this.setState({ currentIdEditing: -1 });\r\n    }\r\n  };\r\n\r\n  getCMTTableContent = () => {\r\n    //CMT TABLE CONTENT RENDER\r\n    return this.state.CMTItemsArray.map((item) => (\r\n      <tr key={item.id}>\r\n        <td>{item.id}</td>\r\n        <td>\r\n          <input\r\n            id={item.id + \"activity\"}\r\n            type=\"text\"\r\n            defaultValue={item.activity}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"unit\"} type=\"text\" defaultValue={item.unit} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"rate\"} type=\"text\" defaultValue={item.rate} />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteCMTItem(item.id)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.editCMTItem(item.id)}\r\n          >\r\n            {this.state.currentIdEditing == item.id ? (\r\n              <FcCheckmark />\r\n            ) : (\r\n              <AiTwotoneEdit />\r\n            )}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleCMTItemsImport();\r\n  };\r\n\r\n  handleCMTItemsImport = () => {\r\n    db.collection(\"CMT\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtCMTItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtCMTItemsArray.push(data);\r\n        });\r\n        this.setState({\r\n          CMTItemsArray: pvtCMTItemsArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  pushNewData = () => {\r\n    let addedId = document.getElementById(\"customRowId\").value;\r\n    let addedActivity = document.getElementById(\"customRowActivity\").value;\r\n    let addedUnit = document.getElementById(\"customRowUnit\").value;\r\n    let addedRate = document.getElementById(\"customRowRate\").value;\r\n\r\n    db.collection(\"CMT\").doc(addedId).set({\r\n      activity: addedActivity,\r\n      unit: addedUnit,\r\n      rate: addedRate,\r\n      id: addedId,\r\n    });\r\n\r\n    this.handleCMTItemsImport();\r\n    this.deleteCustomRowData();\r\n  };\r\n\r\n  deleteCustomRowData = () => {\r\n    document.getElementById(\"customRowId\").value = \"\";\r\n    document.getElementById(\"customRowActivity\").value = \"\";\r\n    document.getElementById(\"customRowUnit\").value = \"\";\r\n    document.getElementById(\"customRowRate\").value = \"\";\r\n  };\r\n\r\n  addCustomRow = () => {\r\n    //ADDING NEW DATA\r\n    return (\r\n      <tr>\r\n        <td>\r\n          Id: <input id=\"customRowId\" type=\"text\" style={{ width: 50 }} />{\" \"}\r\n        </td>\r\n        <td>\r\n          Activity: <input id=\"customRowActivity\" />\r\n        </td>\r\n        <td>\r\n          Unit: <input id=\"customRowUnit\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          Rate: <input id=\"customRowRate\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.pushNewData()}\r\n          >\r\n            <FcCheckmark />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteCustomRowData()}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main_table\">\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Activity</th>\r\n              <th>Unit</th>\r\n              <th>Rate (in Rs)</th>\r\n              <th>\r\n                <button\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                  onClick={() => this.setState({ customRowAddBool: true })}\r\n                >\r\n                  <BsPlusCircleFill />\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.getCMTTableContent()}\r\n            {this.state.customRowAddBool ? this.addCustomRow() : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminPageCMT;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\navBar.jsx",["130","131"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\fabricCanvas.jsx",["132","133","134","135"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport EditingCanvas from \"./editingCanvas\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Fabric_Canvas_My = (props) => {\r\n  const {\r\n    currentComp,\r\n    currentSilhouette,\r\n    silhouetteRenderSwitch,\r\n    componentRenderSwitch,\r\n    patternRenderSwitch,\r\n    currentPatternComp,\r\n    deleteActiveObject,\r\n    compDict,\r\n    bgColor,\r\n  } = props;\r\n\r\n  var editButtonRef = useRef(null);\r\n\r\n  const [canvas, setCanvas] = useState(\"\");\r\n  useEffect(() => {\r\n    setCanvas(initCanvas());\r\n  }, []);\r\n\r\n  const initCanvas = () =>\r\n    new fabric.Canvas(\"canvas\", {\r\n      height: 500,\r\n      width: 700,\r\n      // backgroundColor: \"red\",\r\n    });\r\n\r\n  let comp = new Image();\r\n  var comp_ = new fabric.Image(comp);\r\n\r\n  // let patternImg = new Image();\r\n  // var patternImg_ = new fabric.Image(patternImg);\r\n\r\n  let main = new Image();\r\n  let mask = new Image();\r\n  var main_ = new fabric.Image(main);\r\n  var mask_ = new fabric.Image(mask);\r\n\r\n  var componentsGroup = new fabric.Group();\r\n  var silhouettesGroup = new fabric.Group();\r\n  var patternsGroup = new fabric.Group();\r\n\r\n  var localEditComp;\r\n\r\n  //Object renditions\r\n  const addComponent = () => {\r\n    comp.src = currentComp;\r\n    comp_ = new fabric.Image(comp); //left, top are used to indicate the inital render position of the object\r\n    componentsGroup.addWithUpdate(comp_);\r\n\r\n    canvas.on(\"selection:created\", function (options) {\r\n      // editButtonRef.current.disabled = false;\r\n      editButtonRef.current.style.visibility = \"visible\";\r\n    });\r\n\r\n    canvas.on(\"selection:cleared\", function (options) {\r\n      // editButtonRef.current.variant = true;\r\n      editButtonRef.current.style.visibility = \"hidden\";\r\n    });\r\n\r\n    canvas.add(comp_);\r\n  };\r\n\r\n  const getEditedObjectSrc = (objSrc) => {\r\n    addEditedObject(objSrc);\r\n  };\r\n\r\n  //removes selected object and adds the edited object in its place\r\n  const addEditedObject = (localSrc) => {\r\n    //getting position of the original object\r\n\r\n    let editedCompImage = new Image();\r\n    editedCompImage.src = localSrc;\r\n    let editedObjectToRender = new fabric.Image(editedCompImage, {\r\n      top: localEditComp.top + localEditComp.height / 2,\r\n      left: localEditComp.left + localEditComp.width / 2,\r\n    });\r\n    canvas.remove(localEditComp);\r\n    canvas.add(editedObjectToRender);\r\n  };\r\n\r\n  const addSilhouette = () => {\r\n    main.src = currentSilhouette.comp[0];\r\n    mask.src = currentSilhouette.comp[1];\r\n\r\n    main_ = new fabric.Image(main, { selectable: false });\r\n    mask_ = new fabric.Image(mask, { selectable: false });\r\n\r\n    canvas.add(main_);\r\n    canvas.add(mask_);\r\n    canvas.renderAll();\r\n  };\r\n\r\n  const addPattern = () => {\r\n    var patternImg = new Image();\r\n    patternImg.src = currentPatternComp;\r\n    console.log(patternImg.src);\r\n    let patternImg_ = new fabric.Image(patternImg);\r\n\r\n    canvas.setBackgroundImage(patternImg_);\r\n  };\r\n\r\n  const removeObject = () => {\r\n    canvas.remove(canvas.getActiveObject());\r\n  };\r\n\r\n  const editingObjectGetter = () => {\r\n    localEditComp = canvas.getActiveObject();\r\n    return canvas.getActiveObject();\r\n  };\r\n\r\n  if (silhouetteRenderSwitch) {\r\n    addSilhouette();\r\n  }\r\n\r\n  if (componentRenderSwitch) {\r\n    addComponent();\r\n  }\r\n\r\n  if (patternRenderSwitch) {\r\n    addPattern();\r\n  }\r\n\r\n  // if (colorRenderSwitch) {\r\n  //   addColor();\r\n  // }\r\n\r\n  if (deleteActiveObject && canvas.getActiveObject() != null) {\r\n    removeObject();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <canvas id=\"canvas\" />\r\n      </Row>\r\n      <Row>\r\n        <EditingCanvas\r\n          editFun={editingObjectGetter}\r\n          forwardedRef={editButtonRef}\r\n          setEditedObjectSrc={getEditedObjectSrc}\r\n          compDict={compDict}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fabric_Canvas_My;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\toolBar.jsx",["136"],"import React, { Component } from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport ComponentDropdown from \"./componentDropdown\";\r\nimport EyeDropTool from \"./eyeDropTool\";\r\nimport PatternDropdown from \"./patternDropdown\";\r\nimport SilhouettesDropdown from \"./silhouettesDropdown\";\r\n\r\nclass ToolBar extends Component {\r\n  state = { editButtonDisplay: \"none\" };\r\n\r\n  render() {\r\n    return (\r\n      <ButtonGroup vertical>\r\n        <EyeDropTool\r\n          onHandleColorChangeComplete={this.props.onHandleColorChangeComplete}\r\n          bgColor={this.props.bgColor}\r\n          onHandleColorUpload={this.props.onHandleColorUpload}\r\n        />\r\n        <ComponentDropdown\r\n          label=\"Components\"\r\n          uploadedComponentFiles={this.props.uploadedComponentFiles}\r\n          importedComponentFiles={this.props.importedComponentFiles}\r\n          drawComponent={this.props.drawComponent}\r\n        ></ComponentDropdown>\r\n        <SilhouettesDropdown\r\n          label=\"Silhouettes\"\r\n          combinedSilhouettesArray={this.props.combinedSilhouettesArray}\r\n          drawSilhouettes={this.props.drawSilhouettes}\r\n        ></SilhouettesDropdown>\r\n        <PatternDropdown\r\n          label=\"Patterns\"\r\n          uploadedPatternFiles={this.props.uploadedPatternFiles}\r\n          drawPattern={this.props.drawPattern}\r\n        />\r\n        {/* <Button variant=\"danger\" style={{ display: \"true\" }}>\r\n          Edit\r\n        </Button> */}\r\n      </ButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminGetItemType.jsx",["137"],"import React, { Component, useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\n\r\nconst AdminGetItemType = (props) => {\r\n  const [titleTxt, setTitleTxt] = useState(\"Select Type\"); //React hook\r\n  const { rawArray, inRow, onItemTypeSelected } = props;\r\n  \r\n  let typeArray = [];\r\n  rawArray.forEach((element) => {\r\n    if (typeArray.includes(element.type)) {\r\n    } else {\r\n      typeArray.push(element.type);\r\n    }\r\n  });\r\n\r\n  const handleOnClick = (element) => {\r\n    setTitleTxt(element);\r\n    onItemTypeSelected(inRow, element);\r\n  };\r\n\r\n  return (\r\n    <DropdownButton title={titleTxt}>\r\n      {typeArray.map((element) => (\r\n        <Dropdown.Item key={element} onClick={() => handleOnClick(element)}>\r\n          {element}\r\n        </Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  );\r\n};\r\n\r\nexport default AdminGetItemType;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\componentDropdown.jsx",["138","139","140","141"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst ComponentDropdown = (props) => {\r\n  const {\r\n    label,\r\n    uploadedComponentFiles,\r\n    importedComponentFiles,\r\n    drawComponent,\r\n  } = props;\r\n  var componentFiles = importedComponentFiles;\r\n  // console.log(componentFiles);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {importedComponentFiles.map((comp) => (\r\n          <Dropdown.Item\r\n            onClick={() =>\r\n              drawComponent(comp.comp, comp.config, comp.CMT_config)\r\n            }\r\n            key={comp.name}\r\n          >\r\n            {comp.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ComponentDropdown;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\editingCanvas.jsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { Row, Button, Col } from \"react-bootstrap\";\r\nimport {\r\n  ChromePicker,\r\n  HuePicker,\r\n  PhotoshopPicker,\r\n  SliderPicker,\r\n} from \"react-color\";\r\nimport _ from \"lodash\";\r\n\r\nconst EditingCanvas = (props) => {\r\n  const {\r\n    editFun,\r\n    isEditingModeOn,\r\n    forwardedRef,\r\n    setEditedObjectSrc,\r\n    compDict,\r\n  } = props;\r\n\r\n  const [canvas2, setCanvas] = useState(\"\");\r\n  useEffect(() => {\r\n    setCanvas(initCanvas());\r\n  }, []);\r\n\r\n  const initCanvas = () =>\r\n    new fabric.StaticCanvas(\"canvas2\", {\r\n      height: 500,\r\n      width: 700,\r\n      // backgroundColor: \"yellow\",\r\n    });\r\n\r\n  var objectToRender;\r\n  var localSrc;\r\n  var k = 0;\r\n  var selectedColor;\r\n  var bgColor;\r\n\r\n  const handleChangeComplete = (color) => {\r\n    selectedColor = color;\r\n    bgColor = color.hex;\r\n    newColor();\r\n  };\r\n\r\n  const RenderEditableObject = () => {\r\n    objectToRender = editFun();\r\n    // canvas2.add(objectToRender);\r\n    canvas2.renderAll();\r\n  };\r\n\r\n  const getBase64Image = (img) => {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    let red = 255,\r\n      green = 255,\r\n      blue = 255,\r\n      targetRed = 255,\r\n      targetGreen = 255,\r\n      targetBlue = 255;\r\n\r\n    if (selectedColor !== null) {\r\n      red = selectedColor.rgb.r;\r\n      green = selectedColor.rgb.g;\r\n      blue = selectedColor.rgb.b;\r\n    }\r\n\r\n    var imgDataInit = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    let imgd = imgDataInit.data;\r\n\r\n    let checkerArray = [];\r\n    let dictOfOccurences = {};\r\n\r\n    for (var i = 0, n = imgd.length; i < n; i += 4) {\r\n      let r = imgd[i];\r\n      let g = imgd[i + 1];\r\n      let b = imgd[i + 2];\r\n\r\n      let checkerRGB = { red: r, green: g, blue: b };\r\n\r\n      var incld = checkerArray.some((elem) => {\r\n        return JSON.stringify(checkerRGB) === JSON.stringify(elem);\r\n      });\r\n\r\n      if (incld) {\r\n        if (dictOfOccurences[JSON.stringify(checkerRGB)] === undefined) {\r\n          dictOfOccurences[JSON.stringify(checkerRGB)] = 1;\r\n        } else {\r\n          dictOfOccurences[JSON.stringify(checkerRGB)] =\r\n            dictOfOccurences[JSON.stringify(checkerRGB)] + 1;\r\n        }\r\n      } else {\r\n        checkerArray.push(checkerRGB);\r\n      }\r\n    }\r\n    let objKey = Object.keys(dictOfOccurences).reduce((a, b) =>\r\n      dictOfOccurences[a] > dictOfOccurences[b] ? a : b\r\n    );\r\n\r\n    if (objKey === JSON.stringify({ red: 0, green: 0, blue: 0 })) {\r\n      delete dictOfOccurences[JSON.stringify({ red: 0, green: 0, blue: 0 })];\r\n      objKey = Object.keys(dictOfOccurences).reduce((a, b) =>\r\n        dictOfOccurences[a] > dictOfOccurences[b] ? a : b\r\n      );\r\n    }\r\n\r\n    let parsedObjKey = JSON.parse(objKey);\r\n\r\n    for (var i = 0, n = imgd.length; i < n; i += 4) {\r\n      let r = imgd[i];\r\n      let g = imgd[i + 1];\r\n      let b = imgd[i + 2];\r\n\r\n      if (\r\n        r === parsedObjKey.red &&\r\n        g === parsedObjKey.green &&\r\n        b === parsedObjKey.blue\r\n      ) {\r\n        imgd[i] = selectedColor.rgb.r;\r\n        imgd[i + 1] = selectedColor.rgb.g;\r\n        imgd[i + 2] = selectedColor.rgb.b;\r\n      }\r\n    }\r\n    ctx.putImageData(imgDataInit, 0, 0);\r\n    return canvas.toDataURL();\r\n  };\r\n\r\n  const newColor = () => {\r\n    canvas2.clear();\r\n    var originalSource = objectToRender._originalElement.currentSrc;\r\n    var locImg = new Image();\r\n    locImg.src = originalSource;\r\n\r\n    localSrc = getBase64Image(locImg);\r\n    locImg.src = localSrc;\r\n\r\n    let newImageToRender = new fabric.Image(locImg, {\r\n      top: 20,\r\n      left: 30,\r\n    }); //make sure the position is same later on\r\n    canvas2.add(newImageToRender);\r\n  };\r\n\r\n  const exportComponent = () => {\r\n    setEditedObjectSrc(localSrc);\r\n    canvas2.clear();\r\n  };\r\n\r\n  return (\r\n    <div ref={forwardedRef} style={{ visibility: \"hidden\" }}>\r\n      <Row xs={4} className=\"justify-content-md-center\">\r\n        {\" \"}\r\n        {/* Have to add this button in this file because of bug in fabric.js */}\r\n        <Button className=\"btn-danger\" onClick={() => RenderEditableObject()}>\r\n          Edit\r\n        </Button>\r\n        <HuePicker\r\n          color={bgColor}\r\n          onChangeComplete={handleChangeComplete}\r\n          className=\"ml-3\"\r\n        />\r\n      </Row>\r\n      <Row className=\"justify-content-md-center mt-2\">\r\n        <Button onClick={() => exportComponent()}>Export</Button>\r\n        <canvas id=\"canvas2\" />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditingCanvas;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\eyeDropTool.jsx",["160","161"],"import { ButtonGroup, Button, Overlay } from \"react-bootstrap\";\r\nimport React, { Component, useState, useRef } from \"react\";\r\nimport { FaEyeDropper } from \"react-icons/fa\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nconst EyeDropTool = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  const { onHandleColorChangeComplete, bgColor, onHandleColorUpload } = props;\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" ref={target} onClick={() => setShow(!show)}>\r\n        <FaEyeDropper /> Color\r\n      </Button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n          <div\r\n            {...props}\r\n            style={{\r\n              backgroundColor: \"alpha\",\r\n              padding: \"2px 10px\",\r\n              color: \"white\",\r\n              borderRadius: 3,\r\n              ...props.style,\r\n            }}\r\n            className=\"row justify-content-center align-self-center\"\r\n          >\r\n            <ChromePicker\r\n              color={bgColor}\r\n              onChangeComplete={onHandleColorChangeComplete}\r\n            />\r\n            <Button variant=\"dark\" onClick={() => onHandleColorUpload()}>\r\n              Double <br /> Click to <br /> Upload\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EyeDropTool;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\patternDropdown.jsx",["162","163","164"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst PatternDropdown = (props) => {\r\n  const {\r\n    label,\r\n    importedPatternFiles,\r\n    uploadedPatternFiles,\r\n    drawPattern,\r\n  } = props;\r\n  var componentFiles = importedPatternFiles;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {componentFiles.map((comp) => (\r\n          <Dropdown.Item key={comp.size} onClick={() => drawPattern(comp.comp)}>\r\n            {comp.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n        {/* <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item> */}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatternDropdown;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\silhouettesDropdown.jsx",["165","166"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst SilhouettesDropdown = (props) => {\r\n  const { label, drawSilhouettes, combinedSilhouettesArray } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {combinedSilhouettesArray.map((comp) => (\r\n          <Dropdown.Item\r\n            key={comp[0].size}\r\n            onClick={() => drawSilhouettes(comp)}\r\n          >\r\n            {comp[0].name}\r\n          </Dropdown.Item>\r\n        ))}\r\n        {/* <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item> */}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SilhouettesDropdown;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addSilhouettePage.jsx",["167"],"import React, { Component } from \"react\";\r\nimport { Row, Button } from \"react-bootstrap\";\r\nimport NavBar from \"./navBar\";\r\nimport Popup from \"reactjs-popup\";\r\nimport tick from \"../gifs/tick.gif\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nclass AddSilhouette extends Component {\r\n  state = { toRenderTick: false };\r\n\r\n  getTickRender = () => {\r\n    if (this.state.toRenderTick) {\r\n      return <img src={tick} width={40} height={40} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  onUpload = () => {\r\n    let silhouetteCompsArray = [\r\n      this.props.latestSilhouettes[0].comp,\r\n      this.props.latestSilhouettes[1].comp,\r\n    ];\r\n    let id = document.getElementById(\"compId\").value;\r\n    db.collection(\"silhouettes\")\r\n      .doc(id)\r\n      .set({\r\n        id: id,\r\n        name: document.getElementById(\"compName\").value,\r\n        comp: silhouetteCompsArray,\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Row className=\"m-2\">\r\n          <Popup\r\n            trigger={<button className=\"button\"> Silhouette Import </button>}\r\n            modal\r\n          >\r\n            <Row>\r\n              <input\r\n                type=\"file\"\r\n                onChange={this.props.onHandleUploadedSilhouetteMainFiles}\r\n              ></input>\r\n              <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                Upload Silhouette Main\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={this.props.onHandleUploadedSilhouetteMaskFiles}\r\n              ></input>\r\n              <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                Upload Silhouette Mask\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center mt-3\">\r\n              <Button\r\n                variant={this.props.buttonProcessing[1]}\r\n                onClick={this.props.onHandleSilhouettesCombine}\r\n              >\r\n                {this.props.buttonProcessing[2]}\r\n              </Button>\r\n            </Row>\r\n          </Popup>\r\n          <input\r\n            className=\"ml-2 mr-2\"\r\n            type=\"text\"\r\n            placeholder=\"ID\"\r\n            id=\"compId\"\r\n            style={{ width: 40 }}\r\n          />\r\n          <input type=\"text\" placeholder=\"Enter name...\" id=\"compName\" />\r\n        </Row>\r\n        <Button\r\n          className=\"ml-2\"\r\n          variant=\"success\"\r\n          onClick={() => this.onUpload()}\r\n        >\r\n          Upload\r\n        </Button>\r\n        {this.getTickRender()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSilhouette;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addPatternPage.jsx",["168","169","170"],"import React, { Component } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport NavBar from \"./navBar\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport tick from \"../gifs/tick.gif\";\r\n\r\nclass AddPattern extends Component {\r\n  state = { imgComp: null, toRenderTick: false };\r\n\r\n  onUpload = () => {\r\n    let id = document.getElementById(\"compId\").value;\r\n    db.collection(\"patterns\")\r\n      .doc(id)\r\n      .set({\r\n        id: document.getElementById(\"compId\").value,\r\n        name: document.getElementById(\"compName\").value,\r\n        comp: this.state.imgComp,\r\n      });\r\n\r\n    this.setState({ toRenderTick: true });\r\n    setTimeout(\r\n      function () {\r\n        this.setState({ toRenderTick: false });\r\n        window.location.reload();\r\n      }.bind(this),\r\n      3000\r\n    );\r\n  };\r\n\r\n  getTickRender = () => {\r\n    if (this.state.toRenderTick) {\r\n      return <img src={tick} width={40} height={40} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleImage = (event) => {\r\n    let file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      function () {\r\n        this.setState({ imgComp: reader.result });\r\n      }.bind(this),\r\n      false\r\n    );\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Row className=\"m-2\">\r\n          <input type=\"file\" onChange={this.handleImage} />\r\n          <input\r\n            className=\"mr-2\"\r\n            type=\"text\"\r\n            placeholder=\"ID\"\r\n            id=\"compId\"\r\n            style={{ width: 40 }}\r\n          />\r\n          <input type=\"text\" placeholder=\"Enter name...\" id=\"compName\" />\r\n        </Row>\r\n        <Row className=\"m-2\">\r\n          <img src={this.state.imgComp} />\r\n        </Row>\r\n        <Button\r\n          className=\"ml-2\"\r\n          variant=\"success\"\r\n          onClick={() => this.onUpload()}\r\n        >\r\n          Upload\r\n        </Button>\r\n        {this.getTickRender()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPattern;\r\n",{"ruleId":"171","severity":1,"message":"172","line":7,"column":25,"nodeType":"173","messageId":"174","endLine":7,"endColumn":30},{"ruleId":"171","severity":1,"message":"175","line":7,"column":32,"nodeType":"173","messageId":"174","endLine":7,"endColumn":38},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"171","severity":1,"message":"180","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":37},{"ruleId":"171","severity":1,"message":"175","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":23},{"ruleId":"171","severity":1,"message":"181","line":2,"column":25,"nodeType":"173","messageId":"174","endLine":2,"endColumn":35},{"ruleId":"171","severity":1,"message":"182","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":21},{"ruleId":"171","severity":1,"message":"183","line":9,"column":14,"nodeType":"173","messageId":"174","endLine":9,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":181,"column":30,"nodeType":"186","messageId":"187","endLine":181,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":191,"column":30,"nodeType":"186","messageId":"187","endLine":191,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":219,"column":26,"nodeType":"186","messageId":"187","endLine":219,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":229,"column":26,"nodeType":"186","messageId":"187","endLine":229,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":271,"column":30,"nodeType":"186","messageId":"187","endLine":271,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":281,"column":30,"nodeType":"186","messageId":"187","endLine":281,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":309,"column":26,"nodeType":"186","messageId":"187","endLine":309,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":319,"column":26,"nodeType":"186","messageId":"187","endLine":319,"endColumn":28},{"ruleId":"171","severity":1,"message":"188","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"189","line":3,"column":3,"nodeType":"173","messageId":"174","endLine":3,"endColumn":6},{"ruleId":"171","severity":1,"message":"183","line":14,"column":14,"nodeType":"173","messageId":"174","endLine":14,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":113,"column":34,"nodeType":"186","messageId":"187","endLine":113,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":268,"column":34,"nodeType":"186","messageId":"187","endLine":268,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":270,"column":41,"nodeType":"186","messageId":"187","endLine":270,"endColumn":43},{"ruleId":"184","severity":1,"message":"185","line":305,"column":34,"nodeType":"186","messageId":"187","endLine":305,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":346,"column":14,"nodeType":"192","endLine":346,"endColumn":55},{"ruleId":"171","severity":1,"message":"183","line":3,"column":14,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"171","severity":1,"message":"193","line":6,"column":27,"nodeType":"173","messageId":"174","endLine":6,"endColumn":37},{"ruleId":"184","severity":1,"message":"185","line":32,"column":37,"nodeType":"186","messageId":"187","endLine":32,"endColumn":39},{"ruleId":"184","severity":1,"message":"185","line":34,"column":44,"nodeType":"186","messageId":"187","endLine":34,"endColumn":46},{"ruleId":"184","severity":1,"message":"185","line":77,"column":42,"nodeType":"186","messageId":"187","endLine":77,"endColumn":44},{"ruleId":"171","severity":1,"message":"194","line":2,"column":31,"nodeType":"173","messageId":"174","endLine":2,"endColumn":37},{"ruleId":"171","severity":1,"message":"195","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":54,"column":15,"nodeType":"192","endLine":63,"endColumn":16},{"ruleId":"171","severity":1,"message":"183","line":3,"column":14,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":33,"column":37,"nodeType":"186","messageId":"187","endLine":33,"endColumn":39},{"ruleId":"184","severity":1,"message":"185","line":35,"column":44,"nodeType":"186","messageId":"187","endLine":35,"endColumn":46},{"ruleId":"184","severity":1,"message":"185","line":78,"column":42,"nodeType":"186","messageId":"187","endLine":78,"endColumn":44},{"ruleId":"171","severity":1,"message":"198","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"199","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":23},{"ruleId":"171","severity":1,"message":"194","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":16},{"ruleId":"171","severity":1,"message":"200","line":17,"column":5,"nodeType":"173","messageId":"174","endLine":17,"endColumn":12},{"ruleId":"171","severity":1,"message":"201","line":46,"column":7,"nodeType":"173","messageId":"174","endLine":46,"endColumn":23},{"ruleId":"171","severity":1,"message":"202","line":47,"column":7,"nodeType":"173","messageId":"174","endLine":47,"endColumn":20},{"ruleId":"171","severity":1,"message":"194","line":2,"column":23,"nodeType":"173","messageId":"174","endLine":2,"endColumn":29},{"ruleId":"171","severity":1,"message":"198","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"198","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"203","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"171","severity":1,"message":"204","line":9,"column":5,"nodeType":"173","messageId":"174","endLine":9,"endColumn":27},{"ruleId":"171","severity":1,"message":"205","line":13,"column":7,"nodeType":"173","messageId":"174","endLine":13,"endColumn":21},{"ruleId":"171","severity":1,"message":"198","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"206","line":1,"column":49,"nodeType":"173","messageId":"174","endLine":1,"endColumn":55},{"ruleId":"171","severity":1,"message":"189","line":3,"column":23,"nodeType":"173","messageId":"174","endLine":3,"endColumn":26},{"ruleId":"171","severity":1,"message":"207","line":5,"column":3,"nodeType":"173","messageId":"174","endLine":5,"endColumn":15},{"ruleId":"171","severity":1,"message":"208","line":7,"column":3,"nodeType":"173","messageId":"174","endLine":7,"endColumn":18},{"ruleId":"171","severity":1,"message":"209","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":15},{"ruleId":"171","severity":1,"message":"210","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":9},{"ruleId":"171","severity":1,"message":"211","line":15,"column":5,"nodeType":"173","messageId":"174","endLine":15,"endColumn":20},{"ruleId":"171","severity":1,"message":"212","line":18,"column":5,"nodeType":"173","messageId":"174","endLine":18,"endColumn":13},{"ruleId":"171","severity":1,"message":"213","line":35,"column":7,"nodeType":"173","messageId":"174","endLine":35,"endColumn":8},{"ruleId":"171","severity":1,"message":"214","line":62,"column":7,"nodeType":"173","messageId":"174","endLine":62,"endColumn":16},{"ruleId":"171","severity":1,"message":"215","line":63,"column":7,"nodeType":"173","messageId":"174","endLine":63,"endColumn":18},{"ruleId":"171","severity":1,"message":"216","line":64,"column":7,"nodeType":"173","messageId":"174","endLine":64,"endColumn":17},{"ruleId":"171","severity":1,"message":"217","line":67,"column":7,"nodeType":"173","messageId":"174","endLine":67,"endColumn":10},{"ruleId":"171","severity":1,"message":"218","line":68,"column":7,"nodeType":"173","messageId":"174","endLine":68,"endColumn":12},{"ruleId":"171","severity":1,"message":"219","line":69,"column":7,"nodeType":"173","messageId":"174","endLine":69,"endColumn":11},{"ruleId":"220","severity":1,"message":"221","line":113,"column":14,"nodeType":"173","messageId":"222","endLine":113,"endColumn":15},{"ruleId":"220","severity":1,"message":"223","line":113,"column":21,"nodeType":"173","messageId":"222","endLine":113,"endColumn":22},{"ruleId":"171","severity":1,"message":"224","line":1,"column":10,"nodeType":"173","messageId":"174","endLine":1,"endColumn":21},{"ruleId":"171","severity":1,"message":"198","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":26},{"ruleId":"171","severity":1,"message":"198","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"203","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"171","severity":1,"message":"225","line":10,"column":5,"nodeType":"173","messageId":"174","endLine":10,"endColumn":25},{"ruleId":"171","severity":1,"message":"198","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"203","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":13,"column":14,"nodeType":"192","endLine":13,"endColumn":55},{"ruleId":"171","severity":1,"message":"183","line":4,"column":14,"nodeType":"173","messageId":"174","endLine":4,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":33,"column":14,"nodeType":"192","endLine":33,"endColumn":55},{"ruleId":"190","severity":1,"message":"191","line":72,"column":11,"nodeType":"192","endLine":72,"endColumn":43},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'createRef' is defined but never used.","'withRouter' is defined but never used.","'AddSilhouette' is defined but never used.","'auth' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AiFillEdit' is defined but never used.","'Button' is defined but never used.","'Popup' is defined but never used.","react/jsx-pascal-case","Imported JSX component Fabric_Canvas_My must be in PascalCase or SCREAMING_SNAKE_CASE","'Component' is defined but never used.","'LinkContainer' is defined but never used.","'bgColor' is assigned a value but never used.","'silhouettesGroup' is assigned a value but never used.","'patternsGroup' is assigned a value but never used.","'FaTshirt' is defined but never used.","'uploadedComponentFiles' is assigned a value but never used.","'componentFiles' is assigned a value but never used.","'useRef' is defined but never used.","'ChromePicker' is defined but never used.","'PhotoshopPicker' is defined but never used.","'SliderPicker' is defined but never used.","'_' is defined but never used.","'isEditingModeOn' is assigned a value but never used.","'compDict' is assigned a value but never used.","'k' is assigned a value but never used.","'targetRed' is assigned a value but never used.","'targetGreen' is assigned a value but never used.","'targetBlue' is assigned a value but never used.","'red' is assigned a value but never used.","'green' is assigned a value but never used.","'blue' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'n' is already defined.","'ButtonGroup' is defined but never used.","'uploadedPatternFiles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]