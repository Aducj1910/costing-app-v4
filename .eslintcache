[{"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\index.js":"1","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\reportWebVitals.js":"2","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\App.js":"3","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\services\\firebase.js":"4","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addComponentPage.jsx":"5","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageBOM.jsx":"6","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\mainDesign.jsx":"7","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageCMT.jsx":"8","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\navBar.jsx":"9","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\fabricCanvas.jsx":"10","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\toolBar.jsx":"11","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminGetItemType.jsx":"12","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\componentDropdown.jsx":"13","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\editingCanvas.jsx":"14","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\eyeDropTool.jsx":"15","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\patternDropdown.jsx":"16","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\silhouettesDropdown.jsx":"17","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addSilhouettePage.jsx":"18","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addPatternPage.jsx":"19"},{"size":639,"mtime":1612030829082,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1612030829083,"results":"22","hashOfConfig":"21"},{"size":18234,"mtime":1612804416636,"results":"23","hashOfConfig":"21"},{"size":575,"mtime":1612363589221,"results":"24","hashOfConfig":"21"},{"size":12289,"mtime":1612796900309,"results":"25","hashOfConfig":"21"},{"size":6112,"mtime":1612503674068,"results":"26","hashOfConfig":"21"},{"size":3367,"mtime":1612796995225,"results":"27","hashOfConfig":"21"},{"size":5724,"mtime":1612504089732,"results":"28","hashOfConfig":"21"},{"size":1501,"mtime":1612551042733,"results":"29","hashOfConfig":"21"},{"size":3919,"mtime":1612797141506,"results":"30","hashOfConfig":"21"},{"size":1654,"mtime":1612548836066,"results":"31","hashOfConfig":"21"},{"size":869,"mtime":1612083748114,"results":"32","hashOfConfig":"21"},{"size":1250,"mtime":1612798450149,"results":"33","hashOfConfig":"21"},{"size":4684,"mtime":1612030829080,"results":"34","hashOfConfig":"21"},{"size":1423,"mtime":1612030829080,"results":"35","hashOfConfig":"21"},{"size":1097,"mtime":1612546656676,"results":"36","hashOfConfig":"21"},{"size":1134,"mtime":1612803329025,"results":"37","hashOfConfig":"21"},{"size":2681,"mtime":1612549625969,"results":"38","hashOfConfig":"21"},{"size":2161,"mtime":1612546010751,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"a6lu8p",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\index.js",["93","94"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"fabric\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["95","96"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\reportWebVitals.js",[],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\App.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\services\\firebase.js",[],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addComponentPage.jsx",["118","119","120","121","122","123","124","125"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\nimport NavBar from \"./navBar\";\r\nimport { FcPlus } from \"react-icons/fc\";\r\nimport AdminGetItemType from \"./adminGetItemType\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport tick from \"../gifs/tick.gif\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nclass AddComponentPage extends Component {\r\n  state = {\r\n    componentType: \"Component\",\r\n    BOMitemCount: 0,\r\n    BOMitemCountArray: [],\r\n    CMTitemCount: 0,\r\n    CMTitemCountArray: [],\r\n    BOMItemsArray: [],\r\n    CMTItemsArray: [],\r\n    itemTypeObject: {},\r\n    CMTTitleObject: {},\r\n    imgComp: null,\r\n    componentId: null,\r\n    toRenderTick: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    db.collection(\"BOM\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtBOMItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtBOMItemsArray.push(data);\r\n        });\r\n        this.setState({\r\n          BOMItemsArray: pvtBOMItemsArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n\r\n    db.collection(\"CMT\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtCMTItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtCMTItemsArray.push(data);\r\n        });\r\n        this.setState({ CMTItemsArray: pvtCMTItemsArray });\r\n      });\r\n\r\n    document.title = \"Dashboard\";\r\n  };\r\n\r\n  onItemTypeSelected = (rowId, selectedType) => {\r\n    let itemTypeObject = this.state.itemTypeObject;\r\n    itemTypeObject[rowId] = selectedType;\r\n    this.setState({ itemTypeObject });\r\n  };\r\n\r\n  getComponentImage = (event) => {\r\n    let file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      function () {\r\n        this.setState({ imgComp: reader.result });\r\n      }.bind(this),\r\n      false\r\n    );\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  onUpload = () => {\r\n    let BOMitemCountArray = this.state.BOMitemCountArray;\r\n    let CMTitemCountArray = this.state.CMTitemCountArray;\r\n    let typeObjList = [];\r\n    let CMTtypeObjList = [];\r\n\r\n    BOMitemCountArray.forEach((element) => {\r\n      let itemName = document.getElementById(\"name-lbl\" + element).innerHTML;\r\n      let itemType = this.state.itemTypeObject[element];\r\n      let itemConsumption = document.getElementById(\"consumption\" + element)\r\n        .value;\r\n      let typeObj = {\r\n        name: itemName,\r\n        type: itemType,\r\n        consumption: itemConsumption,\r\n      };\r\n      typeObjList.push(typeObj);\r\n    });\r\n\r\n    CMTitemCountArray.forEach((element) => {\r\n      console.log(element);\r\n      let itemActivity = this.state.CMTTitleObject[element];\r\n      let itemConsumption = document.getElementById(\"CMT-consumption\" + element)\r\n        .value;\r\n      let CMTTypeObj = {\r\n        activity: itemActivity,\r\n        consumption: itemConsumption,\r\n      };\r\n      CMTtypeObjList.push(CMTTypeObj);\r\n    });\r\n\r\n    if (this.state.componentType == \"Silhouette\") {\r\n      let silhouetteCompsArray = [\r\n        this.props.latestSilhouettes[0].comp,\r\n        this.props.latestSilhouettes[1].comp,\r\n      ];\r\n\r\n      db.collection(\"silhouettes\")\r\n        .doc(this.state.componentId)\r\n        .set({\r\n          id: document.getElementById(\"compId\").value,\r\n          name: document.getElementById(\"compName\").value,\r\n          comp: silhouetteCompsArray,\r\n          config: typeObjList,\r\n          CMT_config: CMTtypeObjList,\r\n        });\r\n    } else {\r\n      db.collection(\"components\")\r\n        .doc(this.state.componentId)\r\n        .set({\r\n          id: document.getElementById(\"compId\").value,\r\n          name: document.getElementById(\"compName\").value,\r\n          comp: this.state.imgComp,\r\n          config: typeObjList,\r\n          CMT_config: CMTtypeObjList,\r\n        });\r\n    }\r\n\r\n    this.setState({ toRenderTick: true });\r\n    setTimeout(\r\n      function () {\r\n        this.setState({ toRenderTick: false });\r\n        window.location.reload();\r\n      }.bind(this),\r\n      3000\r\n    );\r\n  };\r\n\r\n  onNewBOMItemAdd = () => {\r\n    let BOMitemCount = this.state.BOMitemCount + 1;\r\n    let BOMitemCountArray = this.state.BOMitemCountArray;\r\n    BOMitemCountArray.push(BOMitemCount - 1);\r\n    this.setState({ BOMitemCount, BOMitemCountArray });\r\n  };\r\n\r\n  onNewCMTItemAdd = () => {\r\n    let CMTitemCount = this.state.CMTitemCount + 1;\r\n    let CMTitemCountArray = this.state.CMTitemCountArray;\r\n    CMTitemCountArray.push(CMTitemCount - 1);\r\n    this.setState({ CMTitemCount, CMTitemCountArray });\r\n  };\r\n\r\n  deleteItem = (index) => {\r\n    let rowToDelete = document.getElementById(\"tr\" + index);\r\n    let BOMitemCountArray = this.state.BOMitemCountArray;\r\n    var i = BOMitemCountArray.indexOf(index);\r\n    if (index !== -1) {\r\n      BOMitemCountArray.splice(i, 1);\r\n    }\r\n    rowToDelete.remove();\r\n    this.setState({ BOMitemCountArray });\r\n  };\r\n\r\n  RenderBOMItemNameChoice = (index) => {\r\n    let type = this.state.itemTypeObject[index];\r\n    let localBOMRawArray = this.state.BOMItemsArray;\r\n    let nameArray = [];\r\n    localBOMRawArray.forEach((element) => {\r\n      if (element.type === type) {\r\n        nameArray.push(element);\r\n      }\r\n    });\r\n\r\n    const itemClicked = (element) => {\r\n      document.getElementById(\"name-lbl\" + index).innerHTML = element.name;\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <title>Dashboard</title>\r\n        </Helmet>\r\n        <DropdownButton id={\"name\" + index} className=\"ml-2\">\r\n          {nameArray.map((element) => (\r\n            <Dropdown.Item\r\n              onClick={() => itemClicked(element)}\r\n              key={element.id}\r\n            >\r\n              {element.name}\r\n            </Dropdown.Item>\r\n          ))}\r\n        </DropdownButton>\r\n        <h6 className=\"ml-2 mt-2\" id={\"name-lbl\" + index}>\r\n          ---\r\n        </h6>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  getId = (event) => {\r\n    this.setState({ componentId: event.target.value });\r\n  };\r\n\r\n  getCMTTitle = (index, activityName) => {\r\n    let CMTTitleObject = this.state.CMTTitleObject;\r\n    CMTTitleObject[index] = activityName;\r\n    this.setState({ CMTTitleObject });\r\n  };\r\n\r\n  deleteCMTItem = (index) => {\r\n    let rowToDelete = document.getElementById(\"CMTtr\" + index);\r\n    let CMTitemCountArray = this.state.CMTitemCountArray;\r\n    var i = CMTitemCountArray.indexOf(index);\r\n    if (index !== -1) {\r\n      CMTitemCountArray.splice(i, 1);\r\n    }\r\n    rowToDelete.remove();\r\n    this.setState({ CMTitemCountArray });\r\n  };\r\n\r\n  renderNewCMTItemInput = () => {\r\n    return [...Array(this.state.CMTitemCount)].map((e, i) => (\r\n      <tr id={\"CMTtr\" + i} key={i}>\r\n        <td>\r\n          <Row>\r\n            <DropdownButton\r\n              title={\r\n                this.state.CMTTitleObject[i]\r\n                  ? this.state.CMTTitleObject[i]\r\n                  : \"Select\"\r\n              }\r\n            >\r\n              {this.state.CMTItemsArray.map((item) => (\r\n                <Dropdown.Item\r\n                  onClick={() => this.getCMTTitle(i, item.activity)}\r\n                  key={item.id}\r\n                >\r\n                  {item.activity}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </DropdownButton>\r\n          </Row>\r\n        </td>\r\n        <td>\r\n          <input id={\"CMT-consumption\" + i} type=\"text\" />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ border: \"none\", background: \"none\" }}\r\n            onClick={() => this.deleteCMTItem(i)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  changeComponentType = () => {\r\n    if (this.state.componentType == \"Component\") {\r\n      this.setState({ componentType: \"Silhouette\" });\r\n    } else if (this.state.componentType == \"Silhouette\") {\r\n      this.setState({ componentType: \"Component\" });\r\n    }\r\n  };\r\n\r\n  renderNewBOMItemInput = () => {\r\n    return [...Array(this.state.BOMitemCount)].map((e, i) => (\r\n      <tr id={\"tr\" + i} key={i}>\r\n        <td>\r\n          <Row>\r\n            <AdminGetItemType\r\n              rawArray={this.state.BOMItemsArray}\r\n              inRow={i}\r\n              onItemTypeSelected={this.onItemTypeSelected}\r\n            />\r\n            {this.RenderBOMItemNameChoice(i)}\r\n          </Row>\r\n        </td>\r\n        <td>\r\n          <input type=\"text\" id={\"consumption\" + i} />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            id={\"delete\" + i}\r\n            onClick={() => this.deleteItem(i)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  fileUploadRender = () => {\r\n    if (this.state.componentType == \"Silhouette\") {\r\n      return (\r\n        <Popup\r\n          trigger={<button className=\"button\"> Silhouette Import </button>}\r\n          modal\r\n        >\r\n          <Row>\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.props.onHandleUploadedSilhouetteMainFiles}\r\n            ></input>\r\n            <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n              Upload Silhouette Main\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.props.onHandleUploadedSilhouetteMaskFiles}\r\n            ></input>\r\n            <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n              Upload Silhouette Mask\r\n            </Button>\r\n          </Row>\r\n          <Row className=\"justify-content-md-center mt-3\">\r\n            <Button\r\n              variant={this.props.buttonProcessing[1]}\r\n              onClick={this.props.onHandleSilhouettesCombine}\r\n            >\r\n              {this.props.buttonProcessing[2]}\r\n            </Button>\r\n          </Row>\r\n        </Popup>\r\n      );\r\n    } else {\r\n      return <input type=\"file\" onChange={this.getComponentImage} />;\r\n    }\r\n  };\r\n\r\n  getTickRender = () => {\r\n    if (this.state.toRenderTick) {\r\n      return <img src={tick} width={40} height={40} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Row className=\"m-2\">\r\n          {this.fileUploadRender()}\r\n          <input\r\n            className=\"mr-2 ml-2\"\r\n            type=\"text\"\r\n            placeholder=\"ID\"\r\n            id=\"compId\"\r\n            style={{ width: 40 }}\r\n            onChange={this.getId}\r\n          />\r\n          <input type=\"text\" placeholder=\"Enter name...\" id=\"compName\" />\r\n          <Button\r\n            className=\"ml-2\"\r\n            variant=\"warning\"\r\n            onClick={() => this.changeComponentType()}\r\n          >\r\n            {this.state.componentType + \" (Click to toggle)\"}\r\n          </Button>\r\n        </Row>\r\n        <Row className=\"m-2\">\r\n          <Table>\r\n            <tr>\r\n              <th width={600}>\r\n                Item\r\n                <button\r\n                  onClick={() => this.onNewBOMItemAdd()}\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                >\r\n                  <FcPlus />\r\n                </button>\r\n              </th>\r\n              <th>Consumption</th>\r\n            </tr>\r\n            {this.renderNewBOMItemInput()}\r\n          </Table>\r\n        </Row>\r\n        <Row className=\"m-2\">\r\n          <Table>\r\n            <tr>\r\n              <th width={600}>\r\n                Process{\" \"}\r\n                <button\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                  onClick={() => this.onNewCMTItemAdd()}\r\n                >\r\n                  <FcPlus />\r\n                </button>\r\n              </th>\r\n              <th>Consumption</th>\r\n            </tr>\r\n            {this.renderNewCMTItemInput()}\r\n          </Table>\r\n          <Button variant=\"success\" onClick={() => this.onUpload()}>\r\n            Upload\r\n          </Button>\r\n          {this.getTickRender()}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddComponentPage;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageBOM.jsx",["126","127","128","129","130"],"import React, { Component } from \"react\";\r\nimport NavBar from \"./navBar\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { BsPlusCircleFill } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete, AiFillEdit, AiTwotoneEdit } from \"react-icons/ai\";\r\nimport { FcCheckmark } from \"react-icons/fc\";\r\n\r\nclass AdminPageBOM extends Component {\r\n  state = {\r\n    BOMItemsArray: [],\r\n    customRowAddBool: false,\r\n    currentIdEditing: -1,\r\n  };\r\n\r\n  deleteBOMItem = (itemToDelId) => {\r\n    console.log(itemToDelId);\r\n    db.collection(\"BOM\")\r\n      .doc(itemToDelId)\r\n      .delete()\r\n      .then(\r\n        function () {\r\n          this.handleBOMItemsImport();\r\n        }.bind(this)\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  editBOMItem = (itemToEditId) => {\r\n    if (this.state.currentIdEditing == -1) {\r\n      this.setState({ currentIdEditing: itemToEditId });\r\n    } else if (this.state.currentIdEditing == itemToEditId) {\r\n      let nameToPush = document.getElementById(itemToEditId + \"name\").value;\r\n      let typeToPush = document.getElementById(itemToEditId + \"type\").value;\r\n      let unitToPush = document.getElementById(itemToEditId + \"unit\").value;\r\n      let rateToPush = document.getElementById(itemToEditId + \"rate\").value;\r\n      db.collection(\"BOM\").doc(itemToEditId).update({\r\n        name: nameToPush,\r\n        type: typeToPush,\r\n        unit: unitToPush,\r\n        rate: rateToPush,\r\n      });\r\n      this.setState({ currentIdEditing: -1 });\r\n    }\r\n  };\r\n\r\n  getBOMTableContent = () => {\r\n    //BOM TABLE CONTENT RENDER\r\n    return this.state.BOMItemsArray.map((item) => (\r\n      <tr key={item.id}>\r\n        <td>{item.id}</td>\r\n        <td>\r\n          <input id={item.id + \"name\"} type=\"text\" defaultValue={item.name} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"type\"} type=\"text\" defaultValue={item.type} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"unit\"} type=\"text\" defaultValue={item.unit} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"rate\"} type=\"text\" defaultValue={item.rate} />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteBOMItem(item.id)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.editBOMItem(item.id)}\r\n          >\r\n            {this.state.currentIdEditing == item.id ? (\r\n              <FcCheckmark />\r\n            ) : (\r\n              <AiTwotoneEdit />\r\n            )}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleBOMItemsImport();\r\n  };\r\n\r\n  handleBOMItemsImport = () => {\r\n    console.log(\"Called\");\r\n    db.collection(\"BOM\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtBOMItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtBOMItemsArray.push(data);\r\n        });\r\n        this.setState({\r\n          BOMItemsArray: pvtBOMItemsArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  pushNewData = () => {\r\n    let addedId = document.getElementById(\"customRowId\").value;\r\n    let addedName = document.getElementById(\"customRowName\").value;\r\n    let addedType = document.getElementById(\"customRowType\").value;\r\n    let addedUnit = document.getElementById(\"customRowUnit\").value;\r\n    let addedRate = document.getElementById(\"customRowRate\").value;\r\n\r\n    db.collection(\"BOM\").doc(addedId).set({\r\n      name: addedName,\r\n      type: addedType,\r\n      unit: addedUnit,\r\n      rate: addedRate,\r\n      id: addedId,\r\n    });\r\n\r\n    this.handleBOMItemsImport();\r\n    this.deleteCustomRowData();\r\n  };\r\n\r\n  deleteCustomRowData = () => {\r\n    document.getElementById(\"customRowId\").value = \"\";\r\n    document.getElementById(\"customRowName\").value = \"\";\r\n    document.getElementById(\"customRowType\").value = \"\";\r\n    document.getElementById(\"customRowUnit\").value = \"\";\r\n    document.getElementById(\"customRowRate\").value = \"\";\r\n  };\r\n\r\n  addCustomRow = () => {\r\n    //ADDING NEW DATA\r\n    return (\r\n      <tr>\r\n        <td>\r\n          Id: <input id=\"customRowId\" type=\"text\" style={{ width: 50 }} />{\" \"}\r\n        </td>\r\n        <td>\r\n          Name: <input id=\"customRowName\" />\r\n        </td>\r\n        <td>\r\n          Type: <input id=\"customRowType\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          Unit: <input id=\"customRowUnit\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          Rate: <input id=\"customRowRate\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.pushNewData()}\r\n          >\r\n            <FcCheckmark />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteCustomRowData()}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main_table\">\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Item name</th>\r\n              <th>Item type</th>\r\n              <th>Unit</th>\r\n              <th>Rate (in Rs)</th>\r\n              <th>\r\n                <button\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                  onClick={() => this.setState({ customRowAddBool: true })}\r\n                >\r\n                  <BsPlusCircleFill />\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.getBOMTableContent()}{\" \"}\r\n            {this.state.customRowAddBool ? this.addCustomRow() : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminPageBOM;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\mainDesign.jsx",["131","132","133"],"import React, { Component } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Fabric_Canvas_My from \"./fabricCanvas\";\r\nimport NavBar from \"./navBar\";\r\nimport ToolBar from \"./toolBar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CountUp from \"react-countup\";\r\nimport { Helmet } from \"react-helmet\"; //for page title\r\n\r\nclass MainDesign extends Component {\r\n  state = { display: \"yes\" };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: this.state.display }}>\r\n        <Helmet>\r\n          <title>Design</title>\r\n        </Helmet>\r\n        <header>\r\n          <NavBar onCanvasScreen={true}></NavBar>\r\n        </header>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col className=\"m-2\" xs={1}>\r\n              <ToolBar\r\n                uploadedComponentFiles={this.props.uploadedComponentFiles}\r\n                uploadedPatternFiles={this.props.uploadedPatternFiles}\r\n                importedComponentFiles={this.props.importedComponentFiles}\r\n                importedPatternFiles={this.props.importedPatternFiles}\r\n                importedSilhouetteFiles={this.props.importedSilhouetteFiles}\r\n                hiddenRef={this.props.hiddenRef}\r\n                drawComponent={this.props.drawComponent}\r\n                combinedSilhouettesArray={this.props.combinedSilhouettesArray}\r\n                drawSilhouettes={this.props.drawSilhouettes}\r\n                drawPattern={this.props.drawPattern}\r\n                onHandleColorChangeComplete={\r\n                  this.props.onHandleColorChangeComplete\r\n                }\r\n                bgColor={this.props.bgColor}\r\n                onHandleColorUpload={this.props.onHandleColorUpload}\r\n              ></ToolBar>\r\n            </Col>\r\n            <Col className=\"ml-3\">\r\n              {/* <Canvas\r\n                currentComp={this.props.currentComp}\r\n                componentRenderSwitch={this.props.componentRenderSwitch}\r\n                currentSilhouette={this.props.currentSilhouette}\r\n                silhouetteRenderSwitch={this.props.silhsouetteRenderSwitch}\r\n              ></Canvas> */}\r\n              <Fabric_Canvas_My\r\n                currentComp={this.props.currentComp}\r\n                componentRenderSwitch={this.props.componentRenderSwitch}\r\n                currentSilhouette={this.props.currentSilhouette}\r\n                silhouetteRenderSwitch={this.props.silhouetteRenderSwitch}\r\n                patternRenderSwitch={this.props.patternRenderSwitch}\r\n                currentPatternComp={this.props.currentPatternComp}\r\n                deleteActiveObject={this.props.deleteActiveObject}\r\n                compDict={this.props.compDict}\r\n              ></Fabric_Canvas_My>\r\n            </Col>\r\n            <Col ml=\"2\">\r\n              <div>\r\n                <Row>\r\n                  <h3 className=\"mt-4\">Cost estimate:</h3>\r\n                </Row>\r\n                <Row>\r\n                  <h3>\r\n                    <CountUp\r\n                      prefix={\"₹\"}\r\n                      start={50}\r\n                      end={10000}\r\n                      duration={0.8}\r\n                    />\r\n                  </h3>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MainDesign);\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminPageCMT.jsx",["134","135","136","137"],"import React, { Component } from \"react\";\r\nimport NavBar from \"./navBar\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { BsPlusCircleFill } from \"react-icons/bs\";\r\nimport { AiTwotoneDelete, AiTwotoneEdit } from \"react-icons/ai\";\r\nimport { FcCheckmark } from \"react-icons/fc\";\r\n\r\nclass AdminPageCMT extends Component {\r\n  state = {\r\n    CMTItemsArray: [],\r\n    customRowAddBool: false,\r\n    currentIdEditing: -1,\r\n  };\r\n\r\n  deleteCMTItem = (itemToDelId) => {\r\n    console.log(itemToDelId);\r\n    db.collection(\"CMT\")\r\n      .doc(itemToDelId)\r\n      .delete()\r\n      .then(\r\n        function () {\r\n          this.handleCMTItemsImport();\r\n        }.bind(this)\r\n      )\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  editCMTItem = (itemToEditId) => {\r\n    console.log(itemToEditId);\r\n    if (this.state.currentIdEditing == -1) {\r\n      this.setState({ currentIdEditing: itemToEditId });\r\n    } else if (this.state.currentIdEditing == itemToEditId) {\r\n      let activityToPush = document.getElementById(itemToEditId + \"activity\")\r\n        .value;\r\n      let unitToPush = document.getElementById(itemToEditId + \"unit\").value;\r\n      let rateToPush = document.getElementById(itemToEditId + \"rate\").value;\r\n      db.collection(\"CMT\").doc(itemToEditId).update({\r\n        activity: activityToPush,\r\n        unit: unitToPush,\r\n        rate: rateToPush,\r\n      });\r\n      this.setState({ currentIdEditing: -1 });\r\n    }\r\n  };\r\n\r\n  getCMTTableContent = () => {\r\n    //CMT TABLE CONTENT RENDER\r\n    return this.state.CMTItemsArray.map((item) => (\r\n      <tr key={item.id}>\r\n        <td>{item.id}</td>\r\n        <td>\r\n          <input\r\n            id={item.id + \"activity\"}\r\n            type=\"text\"\r\n            defaultValue={item.activity}\r\n          />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"unit\"} type=\"text\" defaultValue={item.unit} />\r\n        </td>\r\n        <td>\r\n          <input id={item.id + \"rate\"} type=\"text\" defaultValue={item.rate} />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteCMTItem(item.id)}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.editCMTItem(item.id)}\r\n          >\r\n            {this.state.currentIdEditing == item.id ? (\r\n              <FcCheckmark />\r\n            ) : (\r\n              <AiTwotoneEdit />\r\n            )}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.handleCMTItemsImport();\r\n  };\r\n\r\n  handleCMTItemsImport = () => {\r\n    db.collection(\"CMT\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let pvtCMTItemsArray = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          pvtCMTItemsArray.push(data);\r\n        });\r\n        this.setState({\r\n          CMTItemsArray: pvtCMTItemsArray,\r\n        });\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  pushNewData = () => {\r\n    let addedId = document.getElementById(\"customRowId\").value;\r\n    let addedActivity = document.getElementById(\"customRowActivity\").value;\r\n    let addedUnit = document.getElementById(\"customRowUnit\").value;\r\n    let addedRate = document.getElementById(\"customRowRate\").value;\r\n\r\n    db.collection(\"CMT\").doc(addedId).set({\r\n      activity: addedActivity,\r\n      unit: addedUnit,\r\n      rate: addedRate,\r\n      id: addedId,\r\n    });\r\n\r\n    this.handleCMTItemsImport();\r\n    this.deleteCustomRowData();\r\n  };\r\n\r\n  deleteCustomRowData = () => {\r\n    document.getElementById(\"customRowId\").value = \"\";\r\n    document.getElementById(\"customRowActivity\").value = \"\";\r\n    document.getElementById(\"customRowUnit\").value = \"\";\r\n    document.getElementById(\"customRowRate\").value = \"\";\r\n  };\r\n\r\n  addCustomRow = () => {\r\n    //ADDING NEW DATA\r\n    return (\r\n      <tr>\r\n        <td>\r\n          Id: <input id=\"customRowId\" type=\"text\" style={{ width: 50 }} />{\" \"}\r\n        </td>\r\n        <td>\r\n          Activity: <input id=\"customRowActivity\" />\r\n        </td>\r\n        <td>\r\n          Unit: <input id=\"customRowUnit\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          Rate: <input id=\"customRowRate\" type=\"text\" />\r\n        </td>\r\n        <td>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.pushNewData()}\r\n          >\r\n            <FcCheckmark />\r\n          </button>\r\n          <button\r\n            style={{ background: \"none\", border: \"none\" }}\r\n            onClick={() => this.deleteCustomRowData()}\r\n          >\r\n            <AiTwotoneDelete />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main_table\">\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Activity</th>\r\n              <th>Unit</th>\r\n              <th>Rate (in Rs)</th>\r\n              <th>\r\n                <button\r\n                  style={{ border: \"none\", background: \"none\" }}\r\n                  onClick={() => this.setState({ customRowAddBool: true })}\r\n                >\r\n                  <BsPlusCircleFill />\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.getCMTTableContent()}\r\n            {this.state.customRowAddBool ? this.addCustomRow() : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminPageCMT;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\navBar.jsx",["138","139"],"import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst NavBar = (props) => {\r\n  const { onCanvasScreen } = props;\r\n\r\n  const getBarType = () => {\r\n    if (onCanvasScreen) {\r\n      return (\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n          <Navbar.Brand>Costing</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/component\" target=\"_blank\">\r\n              Dashboard\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      );\r\n    } else {\r\n      return (\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n          <Navbar.Brand>Costing</Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/component\">\r\n              Component\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/pattern\">\r\n              Pattern\r\n            </Nav.Link>\r\n            {/* <Nav.Link as={Link} to=\"/silhouette\">\r\n              Silhouette\r\n            </Nav.Link> */}\r\n            {/* <Nav.Link href=\"#features\">Features</Nav.Link> */}\r\n            <Nav.Link as={Link} to=\"/admin-bom\">\r\n              BOM\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/admin-cmt\">\r\n              CMT\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <React.Fragment>{getBarType()}</React.Fragment>;\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\fabricCanvas.jsx",["140","141","142","143"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport EditingCanvas from \"./editingCanvas\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Fabric_Canvas_My = (props) => {\r\n  const {\r\n    currentComp,\r\n    currentSilhouette,\r\n    silhouetteRenderSwitch,\r\n    componentRenderSwitch,\r\n    patternRenderSwitch,\r\n    currentPatternComp,\r\n    deleteActiveObject,\r\n    compDict,\r\n    bgColor,\r\n  } = props;\r\n\r\n  var editButtonRef = useRef(null);\r\n\r\n  const [canvas, setCanvas] = useState(\"\");\r\n  useEffect(() => {\r\n    setCanvas(initCanvas());\r\n  }, []);\r\n\r\n  const initCanvas = () =>\r\n    new fabric.Canvas(\"canvas\", {\r\n      height: 500,\r\n      width: 700,\r\n      // backgroundColor: \"red\",\r\n    });\r\n\r\n  let comp = new Image();\r\n  var comp_ = new fabric.Image(comp);\r\n\r\n  // let patternImg = new Image();\r\n  // var patternImg_ = new fabric.Image(patternImg);\r\n\r\n  let main = new Image();\r\n  let mask = new Image();\r\n  var main_ = new fabric.Image(main);\r\n  var mask_ = new fabric.Image(mask);\r\n\r\n  var componentsGroup = new fabric.Group();\r\n  var silhouettesGroup = new fabric.Group();\r\n  var patternsGroup = new fabric.Group();\r\n\r\n  var localEditComp;\r\n\r\n  //Object renditions\r\n  const addComponent = () => {\r\n    comp.src = currentComp;\r\n    comp_ = new fabric.Image(comp); //left, top are used to indicate the inital render position of the object\r\n    componentsGroup.addWithUpdate(comp_);\r\n\r\n    canvas.on(\"selection:created\", function (options) {\r\n      // editButtonRef.current.disabled = false;\r\n      editButtonRef.current.style.visibility = \"visible\";\r\n    });\r\n\r\n    canvas.on(\"selection:cleared\", function (options) {\r\n      // editButtonRef.current.variant = true;\r\n      editButtonRef.current.style.visibility = \"hidden\";\r\n    });\r\n\r\n    canvas.add(comp_);\r\n  };\r\n\r\n  const getEditedObjectSrc = (objSrc) => {\r\n    addEditedObject(objSrc);\r\n  };\r\n\r\n  //removes selected object and adds the edited object in its place\r\n  const addEditedObject = (localSrc) => {\r\n    //getting position of the original object\r\n\r\n    let editedCompImage = new Image();\r\n    editedCompImage.src = localSrc;\r\n    let editedObjectToRender = new fabric.Image(editedCompImage, {\r\n      top: localEditComp.top + localEditComp.height / 2,\r\n      left: localEditComp.left + localEditComp.width / 2,\r\n    });\r\n    canvas.remove(localEditComp);\r\n    canvas.add(editedObjectToRender);\r\n  };\r\n\r\n  const addSilhouette = () => {\r\n    main.src = currentSilhouette.comp[0];\r\n    mask.src = currentSilhouette.comp[1];\r\n\r\n    main_ = new fabric.Image(main, { selectable: false });\r\n    mask_ = new fabric.Image(mask, { selectable: false });\r\n\r\n    canvas.add(main_);\r\n    canvas.add(mask_);\r\n    canvas.renderAll();\r\n  };\r\n\r\n  const addPattern = () => {\r\n    var patternImg = new Image();\r\n    patternImg.src = currentPatternComp;\r\n    let patternImg_ = new fabric.Image(patternImg);\r\n\r\n    canvas.setBackgroundImage(patternImg_);\r\n  };\r\n\r\n  const removeObject = () => {\r\n    canvas.remove(canvas.getActiveObject());\r\n  };\r\n\r\n  const editingObjectGetter = () => {\r\n    localEditComp = canvas.getActiveObject();\r\n    return canvas.getActiveObject();\r\n  };\r\n\r\n  if (silhouetteRenderSwitch) {\r\n    addSilhouette();\r\n  }\r\n\r\n  if (componentRenderSwitch) {\r\n    addComponent();\r\n  }\r\n\r\n  if (patternRenderSwitch) {\r\n    addPattern();\r\n  }\r\n\r\n  // if (colorRenderSwitch) {\r\n  //   addColor();\r\n  // }\r\n\r\n  if (deleteActiveObject && canvas.getActiveObject() != null) {\r\n    removeObject();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <canvas id=\"canvas\" />\r\n      </Row>\r\n      <Row>\r\n        <EditingCanvas\r\n          editFun={editingObjectGetter}\r\n          forwardedRef={editButtonRef}\r\n          setEditedObjectSrc={getEditedObjectSrc}\r\n          compDict={compDict}\r\n        />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fabric_Canvas_My;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\toolBar.jsx",["144"],"import React, { Component } from \"react\";\r\nimport { ButtonGroup, Button } from \"react-bootstrap\";\r\nimport ComponentDropdown from \"./componentDropdown\";\r\nimport EyeDropTool from \"./eyeDropTool\";\r\nimport PatternDropdown from \"./patternDropdown\";\r\nimport SilhouettesDropdown from \"./silhouettesDropdown\";\r\n\r\nclass ToolBar extends Component {\r\n  state = { editButtonDisplay: \"none\" };\r\n\r\n  render() {\r\n    return (\r\n      <ButtonGroup vertical>\r\n        <EyeDropTool\r\n          onHandleColorChangeComplete={this.props.onHandleColorChangeComplete}\r\n          bgColor={this.props.bgColor}\r\n          onHandleColorUpload={this.props.onHandleColorUpload}\r\n        />\r\n        <ComponentDropdown\r\n          label=\"Components\"\r\n          uploadedComponentFiles={this.props.uploadedComponentFiles}\r\n          importedComponentFiles={this.props.importedComponentFiles}\r\n          drawComponent={this.props.drawComponent}\r\n        ></ComponentDropdown>\r\n        <SilhouettesDropdown\r\n          label=\"Silhouettes\"\r\n          combinedSilhouettesArray={this.props.combinedSilhouettesArray}\r\n          drawSilhouettes={this.props.drawSilhouettes}\r\n        ></SilhouettesDropdown>\r\n        <PatternDropdown\r\n          label=\"Patterns\"\r\n          uploadedPatternFiles={this.props.uploadedPatternFiles}\r\n          drawPattern={this.props.drawPattern}\r\n        />\r\n        {/* <Button variant=\"danger\" style={{ display: \"true\" }}>\r\n          Edit\r\n        </Button> */}\r\n      </ButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolBar;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\adminGetItemType.jsx",["145"],"import React, { Component, useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\n\r\nconst AdminGetItemType = (props) => {\r\n  const [titleTxt, setTitleTxt] = useState(\"Select Type\"); //React hook\r\n  const { rawArray, inRow, onItemTypeSelected } = props;\r\n  \r\n  let typeArray = [];\r\n  rawArray.forEach((element) => {\r\n    if (typeArray.includes(element.type)) {\r\n    } else {\r\n      typeArray.push(element.type);\r\n    }\r\n  });\r\n\r\n  const handleOnClick = (element) => {\r\n    setTitleTxt(element);\r\n    onItemTypeSelected(inRow, element);\r\n  };\r\n\r\n  return (\r\n    <DropdownButton title={titleTxt}>\r\n      {typeArray.map((element) => (\r\n        <Dropdown.Item key={element} onClick={() => handleOnClick(element)}>\r\n          {element}\r\n        </Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  );\r\n};\r\n\r\nexport default AdminGetItemType;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\componentDropdown.jsx",["146","147","148","149"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\editingCanvas.jsx",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport { Row, Button, Col } from \"react-bootstrap\";\r\nimport {\r\n  ChromePicker,\r\n  HuePicker,\r\n  PhotoshopPicker,\r\n  SliderPicker,\r\n} from \"react-color\";\r\nimport _ from \"lodash\";\r\n\r\nconst EditingCanvas = (props) => {\r\n  const {\r\n    editFun,\r\n    isEditingModeOn,\r\n    forwardedRef,\r\n    setEditedObjectSrc,\r\n    compDict,\r\n  } = props;\r\n\r\n  const [canvas2, setCanvas] = useState(\"\");\r\n  useEffect(() => {\r\n    setCanvas(initCanvas());\r\n  }, []);\r\n\r\n  const initCanvas = () =>\r\n    new fabric.StaticCanvas(\"canvas2\", {\r\n      height: 500,\r\n      width: 700,\r\n      // backgroundColor: \"yellow\",\r\n    });\r\n\r\n  var objectToRender;\r\n  var localSrc;\r\n  var k = 0;\r\n  var selectedColor;\r\n  var bgColor;\r\n\r\n  const handleChangeComplete = (color) => {\r\n    selectedColor = color;\r\n    bgColor = color.hex;\r\n    newColor();\r\n  };\r\n\r\n  const RenderEditableObject = () => {\r\n    objectToRender = editFun();\r\n    // canvas2.add(objectToRender);\r\n    canvas2.renderAll();\r\n  };\r\n\r\n  const getBase64Image = (img) => {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    let red = 255,\r\n      green = 255,\r\n      blue = 255,\r\n      targetRed = 255,\r\n      targetGreen = 255,\r\n      targetBlue = 255;\r\n\r\n    if (selectedColor !== null) {\r\n      red = selectedColor.rgb.r;\r\n      green = selectedColor.rgb.g;\r\n      blue = selectedColor.rgb.b;\r\n    }\r\n\r\n    var imgDataInit = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    let imgd = imgDataInit.data;\r\n\r\n    let checkerArray = [];\r\n    let dictOfOccurences = {};\r\n\r\n    for (var i = 0, n = imgd.length; i < n; i += 4) {\r\n      let r = imgd[i];\r\n      let g = imgd[i + 1];\r\n      let b = imgd[i + 2];\r\n\r\n      let checkerRGB = { red: r, green: g, blue: b };\r\n\r\n      var incld = checkerArray.some((elem) => {\r\n        return JSON.stringify(checkerRGB) === JSON.stringify(elem);\r\n      });\r\n\r\n      if (incld) {\r\n        if (dictOfOccurences[JSON.stringify(checkerRGB)] === undefined) {\r\n          dictOfOccurences[JSON.stringify(checkerRGB)] = 1;\r\n        } else {\r\n          dictOfOccurences[JSON.stringify(checkerRGB)] =\r\n            dictOfOccurences[JSON.stringify(checkerRGB)] + 1;\r\n        }\r\n      } else {\r\n        checkerArray.push(checkerRGB);\r\n      }\r\n    }\r\n    let objKey = Object.keys(dictOfOccurences).reduce((a, b) =>\r\n      dictOfOccurences[a] > dictOfOccurences[b] ? a : b\r\n    );\r\n\r\n    if (objKey === JSON.stringify({ red: 0, green: 0, blue: 0 })) {\r\n      delete dictOfOccurences[JSON.stringify({ red: 0, green: 0, blue: 0 })];\r\n      objKey = Object.keys(dictOfOccurences).reduce((a, b) =>\r\n        dictOfOccurences[a] > dictOfOccurences[b] ? a : b\r\n      );\r\n    }\r\n\r\n    let parsedObjKey = JSON.parse(objKey);\r\n\r\n    for (var i = 0, n = imgd.length; i < n; i += 4) {\r\n      let r = imgd[i];\r\n      let g = imgd[i + 1];\r\n      let b = imgd[i + 2];\r\n\r\n      if (\r\n        r === parsedObjKey.red &&\r\n        g === parsedObjKey.green &&\r\n        b === parsedObjKey.blue\r\n      ) {\r\n        imgd[i] = selectedColor.rgb.r;\r\n        imgd[i + 1] = selectedColor.rgb.g;\r\n        imgd[i + 2] = selectedColor.rgb.b;\r\n      }\r\n    }\r\n    ctx.putImageData(imgDataInit, 0, 0);\r\n    return canvas.toDataURL();\r\n  };\r\n\r\n  const newColor = () => {\r\n    canvas2.clear();\r\n    var originalSource = objectToRender._originalElement.currentSrc;\r\n    var locImg = new Image();\r\n    locImg.src = originalSource;\r\n\r\n    localSrc = getBase64Image(locImg);\r\n    locImg.src = localSrc;\r\n\r\n    let newImageToRender = new fabric.Image(locImg, {\r\n      top: 20,\r\n      left: 30,\r\n    }); //make sure the position is same later on\r\n    canvas2.add(newImageToRender);\r\n  };\r\n\r\n  const exportComponent = () => {\r\n    setEditedObjectSrc(localSrc);\r\n    canvas2.clear();\r\n  };\r\n\r\n  return (\r\n    <div ref={forwardedRef} style={{ visibility: \"hidden\" }}>\r\n      <Row xs={4} className=\"justify-content-md-center\">\r\n        {\" \"}\r\n        {/* Have to add this button in this file because of bug in fabric.js */}\r\n        <Button className=\"btn-danger\" onClick={() => RenderEditableObject()}>\r\n          Edit\r\n        </Button>\r\n        <HuePicker\r\n          color={bgColor}\r\n          onChangeComplete={handleChangeComplete}\r\n          className=\"ml-3\"\r\n        />\r\n      </Row>\r\n      <Row className=\"justify-content-md-center mt-2\">\r\n        <Button onClick={() => exportComponent()}>Export</Button>\r\n        <canvas id=\"canvas2\" />\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditingCanvas;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\eyeDropTool.jsx",["168","169"],"import { ButtonGroup, Button, Overlay } from \"react-bootstrap\";\r\nimport React, { Component, useState, useRef } from \"react\";\r\nimport { FaEyeDropper } from \"react-icons/fa\";\r\nimport { ChromePicker } from \"react-color\";\r\n\r\nconst EyeDropTool = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n\r\n  const { onHandleColorChangeComplete, bgColor, onHandleColorUpload } = props;\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" ref={target} onClick={() => setShow(!show)}>\r\n        <FaEyeDropper /> Color\r\n      </Button>\r\n      <Overlay target={target.current} show={show} placement=\"right\">\r\n        {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n          <div\r\n            {...props}\r\n            style={{\r\n              backgroundColor: \"alpha\",\r\n              padding: \"2px 10px\",\r\n              color: \"white\",\r\n              borderRadius: 3,\r\n              ...props.style,\r\n            }}\r\n            className=\"row justify-content-center align-self-center\"\r\n          >\r\n            <ChromePicker\r\n              color={bgColor}\r\n              onChangeComplete={onHandleColorChangeComplete}\r\n            />\r\n            <Button variant=\"dark\" onClick={() => onHandleColorUpload()}>\r\n              Double <br /> Click to <br /> Upload\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EyeDropTool;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\patternDropdown.jsx",["170","171","172"],"import React, { Component } from \"react\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { FaTshirt } from \"react-icons/fa\";\r\n\r\n//map each <Dropdown.Item> to an element in array later on\r\nconst PatternDropdown = (props) => {\r\n  const {\r\n    label,\r\n    importedPatternFiles,\r\n    uploadedPatternFiles,\r\n    drawPattern,\r\n  } = props;\r\n  var componentFiles = importedPatternFiles;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <style type=\"text/css\">\r\n        {`\r\n    .btn-flat {\r\n      background-color: #007bff;\r\n      color: white;\r\n    }\r\n    `}\r\n      </style>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        title={label}\r\n        id=\"bg-vertical-dropdown-1\"\r\n        variant=\"flat\"\r\n      >\r\n        {componentFiles.map((comp) => (\r\n          <Dropdown.Item key={comp.size} onClick={() => drawPattern(comp.comp)}>\r\n            {comp.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n        {/* <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item> */}\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatternDropdown;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\silhouettesDropdown.jsx",["173","174","175"],"C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addSilhouettePage.jsx",["176"],"import React, { Component } from \"react\";\r\nimport { Row, Button } from \"react-bootstrap\";\r\nimport NavBar from \"./navBar\";\r\nimport Popup from \"reactjs-popup\";\r\nimport tick from \"../gifs/tick.gif\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nclass AddSilhouette extends Component {\r\n  state = { toRenderTick: false };\r\n\r\n  getTickRender = () => {\r\n    if (this.state.toRenderTick) {\r\n      return <img src={tick} width={40} height={40} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  onUpload = () => {\r\n    let silhouetteCompsArray = [\r\n      this.props.latestSilhouettes[0].comp,\r\n      this.props.latestSilhouettes[1].comp,\r\n    ];\r\n    let id = document.getElementById(\"compId\").value;\r\n    db.collection(\"silhouettes\")\r\n      .doc(id)\r\n      .set({\r\n        id: id,\r\n        name: document.getElementById(\"compName\").value,\r\n        comp: silhouetteCompsArray,\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Row className=\"m-2\">\r\n          <Popup\r\n            trigger={<button className=\"button\"> Silhouette Import </button>}\r\n            modal\r\n          >\r\n            <Row>\r\n              <input\r\n                type=\"file\"\r\n                onChange={this.props.onHandleUploadedSilhouetteMainFiles}\r\n              ></input>\r\n              <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                Upload Silhouette Main\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n              <input\r\n                type=\"file\"\r\n                onChange={this.props.onHandleUploadedSilhouetteMaskFiles}\r\n              ></input>\r\n              <Button bsPrefix=\"super-btn\" variant=\"primary\">\r\n                Upload Silhouette Mask\r\n              </Button>\r\n            </Row>\r\n            <Row className=\"justify-content-md-center mt-3\">\r\n              <Button\r\n                variant={this.props.buttonProcessing[1]}\r\n                onClick={this.props.onHandleSilhouettesCombine}\r\n              >\r\n                {this.props.buttonProcessing[2]}\r\n              </Button>\r\n            </Row>\r\n          </Popup>\r\n          <input\r\n            className=\"ml-2 mr-2\"\r\n            type=\"text\"\r\n            placeholder=\"ID\"\r\n            id=\"compId\"\r\n            style={{ width: 40 }}\r\n          />\r\n          <input type=\"text\" placeholder=\"Enter name...\" id=\"compName\" />\r\n        </Row>\r\n        <Button\r\n          className=\"ml-2\"\r\n          variant=\"success\"\r\n          onClick={() => this.onUpload()}\r\n        >\r\n          Upload\r\n        </Button>\r\n        {this.getTickRender()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSilhouette;\r\n","C:\\Users\\adish\\Desktop\\costing\\costing-app-v4\\src\\components\\addPatternPage.jsx",["177","178","179"],"import React, { Component } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport NavBar from \"./navBar\";\r\nimport { db, auth } from \"../services/firebase\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport tick from \"../gifs/tick.gif\";\r\n\r\nclass AddPattern extends Component {\r\n  state = { imgComp: null, toRenderTick: false };\r\n\r\n  onUpload = () => {\r\n    let id = document.getElementById(\"compId\").value;\r\n    db.collection(\"patterns\")\r\n      .doc(id)\r\n      .set({\r\n        id: document.getElementById(\"compId\").value,\r\n        name: document.getElementById(\"compName\").value,\r\n        comp: this.state.imgComp,\r\n      });\r\n\r\n    this.setState({ toRenderTick: true });\r\n    setTimeout(\r\n      function () {\r\n        this.setState({ toRenderTick: false });\r\n        window.location.reload();\r\n      }.bind(this),\r\n      3000\r\n    );\r\n  };\r\n\r\n  getTickRender = () => {\r\n    if (this.state.toRenderTick) {\r\n      return <img src={tick} width={40} height={40} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleImage = (event) => {\r\n    let file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.addEventListener(\r\n      \"load\",\r\n      function () {\r\n        this.setState({ imgComp: reader.result });\r\n      }.bind(this),\r\n      false\r\n    );\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <NavBar />\r\n        </header>\r\n        <Row className=\"m-2\">\r\n          <input type=\"file\" onChange={this.handleImage} />\r\n          <input\r\n            className=\"mr-2\"\r\n            type=\"text\"\r\n            placeholder=\"ID\"\r\n            id=\"compId\"\r\n            style={{ width: 40 }}\r\n          />\r\n          <input type=\"text\" placeholder=\"Enter name...\" id=\"compName\" />\r\n        </Row>\r\n        <Row className=\"m-2\">\r\n          <img src={this.state.imgComp} />\r\n        </Row>\r\n        <Button\r\n          className=\"ml-2\"\r\n          variant=\"success\"\r\n          onClick={() => this.onUpload()}\r\n        >\r\n          Upload\r\n        </Button>\r\n        {this.getTickRender()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPattern;\r\n",{"ruleId":"180","severity":1,"message":"181","line":7,"column":25,"nodeType":"182","messageId":"183","endLine":7,"endColumn":30},{"ruleId":"180","severity":1,"message":"184","line":7,"column":32,"nodeType":"182","messageId":"183","endLine":7,"endColumn":38},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"180","severity":1,"message":"189","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":17},{"ruleId":"180","severity":1,"message":"190","line":2,"column":28,"nodeType":"182","messageId":"183","endLine":2,"endColumn":37},{"ruleId":"180","severity":1,"message":"184","line":3,"column":17,"nodeType":"182","messageId":"183","endLine":3,"endColumn":23},{"ruleId":"180","severity":1,"message":"191","line":3,"column":25,"nodeType":"182","messageId":"183","endLine":3,"endColumn":35},{"ruleId":"180","severity":1,"message":"192","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":21},{"ruleId":"180","severity":1,"message":"193","line":10,"column":14,"nodeType":"182","messageId":"183","endLine":10,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":117,"column":20,"nodeType":"196","messageId":"197","endLine":117,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":121,"column":24,"nodeType":"196","messageId":"197","endLine":121,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":132,"column":27,"nodeType":"196","messageId":"197","endLine":132,"endColumn":29},{"ruleId":"194","severity":1,"message":"195","line":208,"column":22,"nodeType":"196","messageId":"197","endLine":208,"endColumn":24},{"ruleId":"194","severity":1,"message":"195","line":209,"column":27,"nodeType":"196","messageId":"197","endLine":209,"endColumn":29},{"ruleId":"194","severity":1,"message":"195","line":232,"column":30,"nodeType":"196","messageId":"197","endLine":232,"endColumn":32},{"ruleId":"194","severity":1,"message":"195","line":242,"column":30,"nodeType":"196","messageId":"197","endLine":242,"endColumn":32},{"ruleId":"194","severity":1,"message":"195","line":270,"column":26,"nodeType":"196","messageId":"197","endLine":270,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":280,"column":26,"nodeType":"196","messageId":"197","endLine":280,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":318,"column":22,"nodeType":"196","messageId":"197","endLine":318,"endColumn":24},{"ruleId":"194","severity":1,"message":"195","line":319,"column":27,"nodeType":"196","messageId":"197","endLine":319,"endColumn":29},{"ruleId":"194","severity":1,"message":"195","line":339,"column":30,"nodeType":"196","messageId":"197","endLine":339,"endColumn":32},{"ruleId":"194","severity":1,"message":"195","line":349,"column":30,"nodeType":"196","messageId":"197","endLine":349,"endColumn":32},{"ruleId":"194","severity":1,"message":"195","line":377,"column":26,"nodeType":"196","messageId":"197","endLine":377,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":387,"column":26,"nodeType":"196","messageId":"197","endLine":387,"endColumn":28},{"ruleId":"180","severity":1,"message":"198","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"199","line":3,"column":3,"nodeType":"182","messageId":"183","endLine":3,"endColumn":6},{"ruleId":"180","severity":1,"message":"193","line":14,"column":14,"nodeType":"182","messageId":"183","endLine":14,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":116,"column":34,"nodeType":"196","messageId":"197","endLine":116,"endColumn":36},{"ruleId":"194","severity":1,"message":"195","line":274,"column":34,"nodeType":"196","messageId":"197","endLine":274,"endColumn":36},{"ruleId":"194","severity":1,"message":"195","line":276,"column":41,"nodeType":"196","messageId":"197","endLine":276,"endColumn":43},{"ruleId":"194","severity":1,"message":"195","line":311,"column":34,"nodeType":"196","messageId":"197","endLine":311,"endColumn":36},{"ruleId":"200","severity":1,"message":"201","line":352,"column":14,"nodeType":"202","endLine":352,"endColumn":55},{"ruleId":"180","severity":1,"message":"193","line":3,"column":14,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"203","line":6,"column":27,"nodeType":"182","messageId":"183","endLine":6,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":32,"column":37,"nodeType":"196","messageId":"197","endLine":32,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":34,"column":44,"nodeType":"196","messageId":"197","endLine":34,"endColumn":46},{"ruleId":"194","severity":1,"message":"195","line":77,"column":42,"nodeType":"196","messageId":"197","endLine":77,"endColumn":44},{"ruleId":"180","severity":1,"message":"204","line":2,"column":31,"nodeType":"182","messageId":"183","endLine":2,"endColumn":37},{"ruleId":"180","severity":1,"message":"205","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":51,"column":15,"nodeType":"202","endLine":60,"endColumn":16},{"ruleId":"180","severity":1,"message":"193","line":3,"column":14,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":33,"column":37,"nodeType":"196","messageId":"197","endLine":33,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":35,"column":44,"nodeType":"196","messageId":"197","endLine":35,"endColumn":46},{"ruleId":"194","severity":1,"message":"195","line":78,"column":42,"nodeType":"196","messageId":"197","endLine":78,"endColumn":44},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"209","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":23},{"ruleId":"180","severity":1,"message":"204","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":16},{"ruleId":"180","severity":1,"message":"210","line":17,"column":5,"nodeType":"182","messageId":"183","endLine":17,"endColumn":12},{"ruleId":"180","severity":1,"message":"211","line":46,"column":7,"nodeType":"182","messageId":"183","endLine":46,"endColumn":23},{"ruleId":"180","severity":1,"message":"212","line":47,"column":7,"nodeType":"182","messageId":"183","endLine":47,"endColumn":20},{"ruleId":"180","severity":1,"message":"204","line":2,"column":23,"nodeType":"182","messageId":"183","endLine":2,"endColumn":29},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"213","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"214","line":9,"column":5,"nodeType":"182","messageId":"183","endLine":9,"endColumn":27},{"ruleId":"180","severity":1,"message":"215","line":13,"column":7,"nodeType":"182","messageId":"183","endLine":13,"endColumn":21},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"216","line":1,"column":49,"nodeType":"182","messageId":"183","endLine":1,"endColumn":55},{"ruleId":"180","severity":1,"message":"199","line":3,"column":23,"nodeType":"182","messageId":"183","endLine":3,"endColumn":26},{"ruleId":"180","severity":1,"message":"217","line":5,"column":3,"nodeType":"182","messageId":"183","endLine":5,"endColumn":15},{"ruleId":"180","severity":1,"message":"218","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":18},{"ruleId":"180","severity":1,"message":"219","line":8,"column":3,"nodeType":"182","messageId":"183","endLine":8,"endColumn":15},{"ruleId":"180","severity":1,"message":"220","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":9},{"ruleId":"180","severity":1,"message":"221","line":15,"column":5,"nodeType":"182","messageId":"183","endLine":15,"endColumn":20},{"ruleId":"180","severity":1,"message":"222","line":18,"column":5,"nodeType":"182","messageId":"183","endLine":18,"endColumn":13},{"ruleId":"180","severity":1,"message":"223","line":35,"column":7,"nodeType":"182","messageId":"183","endLine":35,"endColumn":8},{"ruleId":"180","severity":1,"message":"224","line":62,"column":7,"nodeType":"182","messageId":"183","endLine":62,"endColumn":16},{"ruleId":"180","severity":1,"message":"225","line":63,"column":7,"nodeType":"182","messageId":"183","endLine":63,"endColumn":18},{"ruleId":"180","severity":1,"message":"226","line":64,"column":7,"nodeType":"182","messageId":"183","endLine":64,"endColumn":17},{"ruleId":"180","severity":1,"message":"227","line":67,"column":7,"nodeType":"182","messageId":"183","endLine":67,"endColumn":10},{"ruleId":"180","severity":1,"message":"228","line":68,"column":7,"nodeType":"182","messageId":"183","endLine":68,"endColumn":12},{"ruleId":"180","severity":1,"message":"229","line":69,"column":7,"nodeType":"182","messageId":"183","endLine":69,"endColumn":11},{"ruleId":"230","severity":1,"message":"231","line":113,"column":14,"nodeType":"182","messageId":"232","endLine":113,"endColumn":15},{"ruleId":"230","severity":1,"message":"233","line":113,"column":21,"nodeType":"182","messageId":"232","endLine":113,"endColumn":22},{"ruleId":"180","severity":1,"message":"234","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":21},{"ruleId":"180","severity":1,"message":"208","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":26},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"213","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"235","line":10,"column":5,"nodeType":"182","messageId":"183","endLine":10,"endColumn":25},{"ruleId":"180","severity":1,"message":"208","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"213","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"236","line":10,"column":5,"nodeType":"182","messageId":"183","endLine":10,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":13,"column":14,"nodeType":"202","endLine":13,"endColumn":55},{"ruleId":"180","severity":1,"message":"193","line":4,"column":14,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},{"ruleId":"200","severity":1,"message":"201","line":33,"column":14,"nodeType":"202","endLine":33,"endColumn":55},{"ruleId":"200","severity":1,"message":"201","line":72,"column":11,"nodeType":"202","endLine":72,"endColumn":43},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["237"],"no-negated-in-lhs",["238"],"'forEach' is defined but never used.","'createRef' is defined but never used.","'withRouter' is defined but never used.","'AddSilhouette' is defined but never used.","'auth' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AiFillEdit' is defined but never used.","'Button' is defined but never used.","'Popup' is defined but never used.","react/jsx-pascal-case","Imported JSX component Fabric_Canvas_My must be in PascalCase or SCREAMING_SNAKE_CASE","'Component' is defined but never used.","'LinkContainer' is defined but never used.","'bgColor' is assigned a value but never used.","'silhouettesGroup' is assigned a value but never used.","'patternsGroup' is assigned a value but never used.","'FaTshirt' is defined but never used.","'uploadedComponentFiles' is assigned a value but never used.","'componentFiles' is assigned a value but never used.","'useRef' is defined but never used.","'ChromePicker' is defined but never used.","'PhotoshopPicker' is defined but never used.","'SliderPicker' is defined but never used.","'_' is defined but never used.","'isEditingModeOn' is assigned a value but never used.","'compDict' is assigned a value but never used.","'k' is assigned a value but never used.","'targetRed' is assigned a value but never used.","'targetGreen' is assigned a value but never used.","'targetBlue' is assigned a value but never used.","'red' is assigned a value but never used.","'green' is assigned a value but never used.","'blue' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'n' is already defined.","'ButtonGroup' is defined but never used.","'uploadedPatternFiles' is assigned a value but never used.","'combinedSilhouettesArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]